<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/DTF-Blog/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/DTF-Blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/DTF-Blog/" rel="alternate" type="text/html" /><updated>2017-01-31T23:35:16+11:00</updated><id>http://localhost:4000/DTF-Blog//</id><title type="html">2016 CfA DTF Fellowship</title><subtitle>A small band of dedicated civic hackers making a difference to the way government works</subtitle><entry><title type="html">Project Structure 102</title><link href="http://localhost:4000/DTF-Blog/Ben-ProjectStructure102/" rel="alternate" type="text/html" title="Project Structure 102" /><published>2017-01-31T00:00:00+11:00</published><updated>2017-01-31T00:00:00+11:00</updated><id>http://localhost:4000/DTF-Blog/Ben-ProjectStructure102</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-ProjectStructure102/">&lt;p&gt;&lt;em&gt;31/01/2017&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Welcome to the second post covering the project structure and code. In this post we’ll peek in at the most important configurations and files and custom code&lt;/p&gt;

&lt;p&gt;This description is based on the repository as it existed at the 16th of January (commit &lt;a href=&quot;https://github.com/CodeforAustralia/dtf-genesis/tree/59ebd8bbae112d6709d0affd7d0e74f1bf992510&quot;&gt;59ebd8bbae112d6709d0affd7d0e74f1bf992510&lt;/a&gt; to be exact) as there have been some significant changes and it’s a moving target&lt;/p&gt;

&lt;h3 id=&quot;rails-isms-ruby-isms-and-a-little-about-regular-expressions&quot;&gt;Rails-isms, Ruby-isms and a little about Regular Expressions&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_book.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few preliminary code structures I feel it worth getting out of the way before delving into the details of what we’ve done to make the CCR, we will assume basic familiarity with programming but no particular language should be required to understand the code presented.&lt;/p&gt;

&lt;p&gt;The first of these I have grown to love in Ruby which is string interpolation, there are two significant types of strings we’ve used: those with single quote &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; and those with double quote &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;. The single quote strings are literal strings and as far as we’re concerned these never undergo interpolation and represent exactly the string that appears on screen, for example the code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x = 'not #{interpolated}'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;would result in x containing &lt;code class=&quot;highlighter-rouge&quot;&gt;not #{interpolated}&lt;/code&gt;. However the strikingly similar code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;string = 'variable value'
x = &quot;interpolated #{string}&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;would result in the value of x depending on the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; and in this example would be &lt;code class=&quot;highlighter-rouge&quot;&gt;interpolated variable value&lt;/code&gt;. Ruby uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;#{}&lt;/code&gt; sequence to escape a little bit of code within a string at runtime&lt;/p&gt;

&lt;p&gt;Ruby also have some special syntax for arrays and ranges in an array it is common enough for a language to allow indexing into a string like it was an array, and in Ruby the string literal itself can be used to index into, so for example &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;[2]&lt;/code&gt; would evaluate to &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;r&quot;&lt;/code&gt;. A neat array trick of many modern languages that Ruby also provides is &lt;strong&gt;ranges&lt;/strong&gt;, where the beginning and ending subscripts of an array can be provided to produce a sub-array or sub-string, lets look at three examples:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;[2...4]&lt;/code&gt; would evaluate to  &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ri&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;[2..9]&lt;/code&gt; would be &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ring&quot;&lt;/code&gt; and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;[1..-2]&lt;/code&gt; would result in &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;trin&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first example demonstrates the exclusive &lt;code class=&quot;highlighter-rouge&quot;&gt;...&lt;/code&gt; by not including the “n”, where using the inclusive &lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt; range operator would have resulted in the string &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;rin&quot;&lt;/code&gt;, the second example demonstrates how Ruby can be helpful and returns an array as long as it can and the last example shows how Ruby uses negative indexes into an array as a shortcut for indexing from the end, such that -1 is the last array entry, -2 the second last, and so on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_foil.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We also use a couple of &lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression#POSIX_basic_and_extended&quot;&gt;regular expressions&lt;/a&gt;&lt;/strong&gt; that I have skittishly encapsulated away into a couple of functions. These regular expressions are much simpler than the ones we began our scraping with and can be understood with familiarity of only a few regular expression characters. First up is the period &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; character, this character simply matches &lt;strong&gt;any&lt;/strong&gt; non-newline character… (almost) everyone loves &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;. Next up I feel obliged to introduce a trio, although we only use two of them in our code they are rather interrelated, these are the star &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; plus &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; and optional &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; regular expression &lt;strong&gt;quantifiers&lt;/strong&gt;, they all operate on the character before them and specify how many of those characters to match. Pairing each one up with our period operator we get the three regular expressions;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; which matches any string of &lt;strong&gt;zero or more&lt;/strong&gt; characters,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.+&lt;/code&gt; which matches any string of &lt;strong&gt;one or more&lt;/strong&gt; characters and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.?&lt;/code&gt; which matches any string of &lt;strong&gt;zero or one&lt;/strong&gt; characters.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we’ve got the regular expression basics done how do we use this. One last bit of regular expression syntax we’ll explore is the pair of parenthesis or &lt;strong&gt;grouping&lt;/strong&gt; symbols &lt;code class=&quot;highlighter-rouge&quot;&gt;(&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;)&lt;/code&gt; which are used to group a segment of a regular expression. We can use them in a simple example in just a minute but to do so we’ll need one little bit of Ruby which is the regular expression matching syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt; which operate a bit like quotes around a string and are used on strings in conjunction with the &lt;strong&gt;match&lt;/strong&gt; function like so: &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;.match(/.?.?.?/)&lt;/code&gt;, this returns a &lt;strong&gt;MatchData&lt;/strong&gt; object with the value &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;str&quot;&lt;/code&gt; made up of the three optional characters. If we now start grouping the regular expression buy putting parenthesis around the first optional character and the last two optional characters like this &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;string&quot;.match(/(.?)(.?.?)/)&lt;/code&gt; we now get a match (with the value &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;str&quot;&lt;/code&gt;) along with two groups where the first is &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;s&quot;&lt;/code&gt; and the second is &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;tr&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One last bit of tecnocrati I’d like to demystify before we proceed to the code is some basics of &lt;strong&gt;URL syntax&lt;/strong&gt;. The humble url is made up of many components but often the function or significance of the component is taken for granted or often just uses default values. Lets start with the misleadingly simple example of “google.com” (and can often be reached by typing “goog&amp;lt;return&amp;gt;”) which is only shorthand for the much more complete “https://www.google.com:443/?gfe_rd=cr&amp;amp;ei=3eyNWN_3JNPM3gfE0L3wBA” which much more nicely demonstrates the components we might wish to tease apart. The first component is the &lt;strong&gt;protocol&lt;/strong&gt; and is usually “http” or more often these days “https” which I won’t go into here. The “www” in our example is an identifier to the server of what kind of request we are making, this is often assumed to be a &lt;strong&gt;web&lt;/strong&gt; or www request if not specified. the “google.com” is the address of the &lt;strong&gt;server&lt;/strong&gt; where result will be served from. The value “:443” specifies that we wish to use the default https &lt;strong&gt;port&lt;/strong&gt;, but could be specified if another port on the server is expecting requests. Our example does not specify a &lt;strong&gt;page&lt;/strong&gt; for the server to serve so the default page is selected, but optionaly a path is specified between the last slash and the question mark. The question mark &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; signifies the beginning of the &lt;strong&gt;parameters&lt;/strong&gt; sent to the page. The paramaters are &lt;strong&gt;key-value pairs&lt;/strong&gt; specified in the format &lt;code class=&quot;highlighter-rouge&quot;&gt;key=value&lt;/code&gt; and are delimited by ampersand &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; characters, so our example has two pairs “gfe_rd=cr” and “ei=3eyNWN_3JNPM3gfE0L3wBA” which are probably referrer or tracking identifiers. A final note about URL syntax, the &lt;strong&gt;space character&lt;/strong&gt; is not allowed in URLs so the space character is often represented by the value “%20”, so to assign “this string” to the key “x”, we would need to translate the string into URL syntax and use &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;x=this%20string&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_docs2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The CCR system we’ve created has been licensed under the &lt;strong&gt;GPL v3&lt;/strong&gt; and a copy of this license is in the file called “LICENSE” and I’d just like to take a moment to outline why this licence has been selected. If you look at the &lt;a href=&quot;https://choosealicense.com/&quot;&gt;choose a license&lt;/a&gt; site the tag line for GPL v3 is “I care about &lt;strong&gt;sharing improvements&lt;/strong&gt;” and it goes on to summarise the requirements as “anyone who distributes your code or a derivative work to make the source available under the same terms”. It seems to be a recurring theme within government to have a custom piece of software written and then not have the expertise or even access to the program or source code to make even minor adjustments and improvements. The GPL v3 was written expressly to prevent this kind of vendor lock in situation and allows the user of a software product to remain in control. Many software vendors will recommend against the GPL family of licenses because the lose bargaining power to the user&lt;/p&gt;

&lt;p&gt;The actual requirements of the GPL v3 are more complete than the summary given at the choose a license site and include requirements for a reasonably competent engineer (pay attention public service, you may want a few of these people one day) to be able to build the program and deploy a derivative work. This allows users to be free from vendor lock in while still allowing an ecosystem of vendors to develop and support the software&lt;/p&gt;

&lt;p&gt;Moving on to the software documentation, the &lt;code class=&quot;highlighter-rouge&quot;&gt;erd.pdf&lt;/code&gt; file contains the entity relation diagram for the database and seems to be missing from recent releases, however it can be easily refreshed by running the ruby &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec erd&lt;/code&gt; program. You can see that the contracts are the centre of the action in this database&lt;/p&gt;

&lt;p&gt;The rest of the code has been written and arranged according to the Rails conventions for the most part and is reasonably self-documented internally. We have attempted to make the code as literate and self documenting as we could and should be reasonably easy for a moderately experienced Rails developer to grock&lt;/p&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_cfg.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lets now have a closer look at some of the more important configuration files&lt;/p&gt;

&lt;h4 id=&quot;configenvironmentsproductionrb&quot;&gt;config/environments/production.rb&lt;/h4&gt;

&lt;p&gt;This part of the production configuration (and a related segment in development.rb) define the mail server used for sending automated emails. The configuration sets up a gmail account as the mail server and defers setting the user name and password to the environment in which it is run. On Heroku there is a panel in the settings where you can set the environment variables gmail_username and gmail_password. The code segment &lt;code class=&quot;highlighter-rouge&quot;&gt;ENV['gmail_username']&lt;/code&gt; gets the &lt;code class=&quot;highlighter-rouge&quot;&gt;ENV&lt;/code&gt; variable provided by Rails and indexes into the value &lt;code class=&quot;highlighter-rouge&quot;&gt;gmail_username&lt;/code&gt; to retrive the value set in the Heroku dashboard&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config.action_mailer.delivery_method = :smtp
config.action_mailer.smtp_settings = {
 :address              =&amp;gt; &quot;smtp.gmail.com&quot;,
 :port                 =&amp;gt; 587,
 :user_name            =&amp;gt; ENV['gmail_username'],
 :password             =&amp;gt; ENV['gmail_password'],
 :authentication       =&amp;gt; &quot;plain&quot;,
 :enable_starttls_auto =&amp;gt; true
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;configinitializersschedulerrb&quot;&gt;config/initializers/scheduler.rb&lt;/h4&gt;

&lt;p&gt;This segment kicks off the scheduled scraping of Tenders Vic. Due to Heroku hosting putting the server to sleep when it is unused the scraping is performed during the day when the server is most likely to be active, however it would be preferable to scrape after hours if more reliable scheduling is avalable. This segment also begins with a bit of a kludge as the scheduler will error if a date from the past is given as a paramater, so if it is within five minutes of the target time it will defer the first scrape to the next day&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if Time.now &amp;gt; Time.parse(&quot;11:55:00 am&quot;)
  start = Time.parse(&quot;11:55:00 am&quot;) + 1.days
else
  start = Time.parse(&quot;11:55:00 am&quot;)
end
daily_scrape = scheduler.every '1d', :first_at =&amp;gt; start do #  '1h', :first_at =&amp;gt; Time.now() + 5 do
  scrape_tenders_vic
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our next bit of code triggers automated mail outs (currently all sent to my email for testing purposes) searching for all contracts that start or end today. Ideally the reporting officer could be contacted on contract start to confirm reporting dates and personnel. Then on the reporting or closing date an automated request for a report could be sent to the relevant officer&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;notify_daily = scheduler.every '1d', :first_at =&amp;gt; start do
  contracts_starting_today = Contract.where(vt_start_date: Time.now)
  contracts_starting_today.each do |cont|
    tweet_contract_start cont
    email_contract_start cont, &quot;puzzleduck+dtf@gmail.com&quot;
  end
  contracts_ending_today = Contract.where(vt_end_date: Time.now)
  contracts_ending_today.each do |cont|
    tweet_contract_end cont
    email_contract_end cont, &quot;puzzleduck+dtf@gmail.com&quot;
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;configdatabaseyml&quot;&gt;config/database.yml&lt;/h4&gt;

&lt;p&gt;In this extract we are looking at the database setup for the development version verses the production environment. You can observe that there are separate databases being used for development and production minimising the chance of accidentally performing development activities on the production database. We also observe the use of environment variables to set the database password, which is once again setup in the Heroku configuration dashboard&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    development:
      &amp;lt;&amp;lt;: *default
      host: localhost
      database: genesis_development
      username: postgres
      password: q1w2e3r4t5

    production:
      &amp;lt;&amp;lt;: *default
      host: localhost
      database: genesis_production
      username: genesis
      password: &amp;lt;%= ENV['GENESIS_DATABASE_PASSWORD'] %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;configsecretsyml&quot;&gt;config/secrets.yml&lt;/h4&gt;

&lt;p&gt;In our secrets file we see the recurring theme of hard coded development variables and production values being sourced from the environment variables. The secret key is used as a key for security purposes and should never be shared, for this reason the production key is encapsulated into an environment variable to prevent it ever being accidentally committed to the repository&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;development:
  secret_key_base: 59f1857fda1f2aa79c7afe6233a00d11a5d65f89f69f66185467878775905ce9710de1a8da8f5e8c79d98a13189c897ed946fe40882940fad666b7fa997caa2e

production:
  secret_key_base: &amp;lt;%= ENV[&quot;SECRET_KEY_BASE&quot;] %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-data-base-and-schemarb&quot;&gt;The Data Base and schema.rb&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_erd.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the top of the schema.rb file is the entry &lt;code class=&quot;highlighter-rouge&quot;&gt;version: 20170106024818&lt;/code&gt; which specifies the last migration that was run against this database. If we create a new migration Rails will compare the time stamp in the migrations file name with this time stamp and stops the server from running until the pending migrations are run. This technique generally does a good job of synchronising the database and code so that new code is not run on an old database or vice versa&lt;/p&gt;

&lt;p&gt;I have chosen to display the contracts entry here, but this is a big file with entries for every object in the database. As we mentioned, there is a correlation between this entry and the data stored across the migrations files and this relationship is managed by rails with the &lt;a href=&quot;http://edgeguides.rubyonrails.org/active_record_migrations.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails db:___&lt;/code&gt; commands&lt;/a&gt; such as &lt;code class=&quot;highlighter-rouge&quot;&gt;rails db:migrate&lt;/code&gt; which will perform any migrations necessary (up or down) to synchronise the code and the database. &lt;code class=&quot;highlighter-rouge&quot;&gt;rails db:rollback&lt;/code&gt; will reverse the last migration, &lt;code class=&quot;highlighter-rouge&quot;&gt;rails db:reset&lt;/code&gt; will reset the database to its default state (be sure to backup any data first!) and there are a host of other commands for managing the database available in Rails but covering them all is a bit out of scope here&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ActiveRecord::Schema.define(version: 20170106024818) do
...
create_table &quot;contracts&quot;, force: :cascade do |t|
  t.string   &quot;vt_contract_number&quot;
  t.string   &quot;vt_title&quot;
  t.date     &quot;vt_start_date&quot;
  t.date     &quot;vt_end_date&quot;
  t.money    &quot;vt_total_value&quot;,          scale: 2
  t.datetime &quot;created_at&quot;,                        null: false
  t.datetime &quot;updated_at&quot;,                        null: false
  t.integer  &quot;vt_department_id&quot;
  t.integer  &quot;vt_contract_type_id&quot;
  t.integer  &quot;vt_value_type_id&quot;
  t.integer  &quot;status_index&quot;
  t.integer  &quot;vt_unspc_id&quot;
  t.string   &quot;vt_contract_description&quot;
  t.integer  &quot;vt_supplier_id&quot;
  t.integer  &quot;project_id&quot;
  t.string   &quot;vt_address&quot;
  t.integer  &quot;vt_status_id&quot;
  t.integer  &quot;vt_address_id&quot;
  t.string   &quot;vt_agency_person&quot;
  t.string   &quot;vt_agency_phone&quot;
  t.string   &quot;vt_agency_email&quot;
  t.string   &quot;vt_supplier_name&quot;
  t.string   &quot;vt_supplier_abn&quot;
  t.string   &quot;vt_supplier_acn&quot;
  t.string   &quot;vt_supplier_address&quot;
  t.string   &quot;vt_supplier_email&quot;
  t.boolean  &quot;autopurge&quot;
  t.string   &quot;ocds_id&quot;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-least-important-bits-of-the-all-important-app-directory&quot;&gt;The (least important bits of the) all important app directory&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_controls.jpeg&quot; alt=&quot;&quot; /&gt;
We’ll only be having a zip through the less interesting parts of the app directory this time with a thorough coverage in the third instalment tentatively titled &lt;strong&gt;“(not even almost) all about MVC frameworks”&lt;/strong&gt; so stay tuned.&lt;/p&gt;

&lt;h4 id=&quot;appassetsjavascriptspagesjs&quot;&gt;app/assets/javascripts/pages.js&lt;/h4&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;pages.js&lt;/code&gt; code is served with static pages (those under the charge of the StaticPages controller) like the dashboard homescreen and the about page. We are looking here at the code that generates the bar chart displaying monthly contract total values. It is similar in principle to the pie chart (in that it is a data driven graph) but is simpler to examine. We start out by defining a size for the chart and calculate some bounds and margins. Then we import the data from Rails and find the maximum value for a contract to determine the maximum domain of our output&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var window_size = 400;

window.onload = function (win) {
  var bar_margin = {top: 20, right: 30, bottom: 30, left: 40}
  var bc_width = window_size - bar_margin.left - bar_margin.right;
  var bc_height = window_size - bar_margin.top - bar_margin.bottom;

  var spending_data = ($('#spending').data('spending'));
  var barWidth = bc_width / spending_data.length;
    maximal = 0;
    spending_data.forEach(function(d) {
      if ((+d.value) &amp;gt; maximal) {
        maximal = d.value;
      }
  });
  maximal = maximal * 1.2;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;D3 has rather good inbuilt scaling functions and here we create linear scales using the maximum value we found earlier and the width of the chart&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  var heightscale = d3.scaleLinear()
      .domain([maximal,0])
      .range([bc_height, 0]);
  var widthscale = d3.scaleOrdinal()
      .range([0, bc_width], .1);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we start using D3 to draw something to the screen. The first line selects an empty element we placed on the dashboard and the next two define its width and height. Then we attach a title to the chart and style and place it&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  var chart = d3.select(&quot;.barchart&quot;)
      .attr(&quot;width&quot;, bc_width + bar_margin.left + bar_margin.right)
      .attr(&quot;height&quot;, bc_height + bar_margin.top + bar_margin.bottom);
  chart.append(&quot;text&quot;)
       .attr(&quot;x&quot;, bc_width / 2)
       .attr(&quot;y&quot;, 20)
       .attr(&quot;class&quot;,&quot;charttitle&quot;)
       .style(&quot;font&quot;, &quot;26px sans-serif&quot;)
       .style(&quot;fill&quot;, &quot;steelblue&quot;)
       .text(&quot;Construction spend/month&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we hookup the data to our D3 chart and associate every data element with a “g” (graphic) element in our chart. The &lt;code class=&quot;highlighter-rouge&quot;&gt;.enter()&lt;/code&gt; segment defines what happens when D3 finds a new element in the data set, in our case we are setting its location by performing a translation transform where we move each bar by &lt;code class=&quot;highlighter-rouge&quot;&gt;i * barWidth&lt;/code&gt;, thereby moving each months bar to the next adjacent position. It might seem a bit overkill in this situation (and it is), but D3 is often used with dynamic live data and we might have a chart that adds and removes columns as the data changes&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  var bar = chart.selectAll(&quot;g&quot;)
       .data(spending_data)
     .enter().append(&quot;g&quot;)
       .attr(&quot;transform&quot;, function(d, i) { return &quot;translate(&quot; + i * barWidth + &quot;,0)&quot;; });
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now at each of the (ironically invisible) &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; objects we append a rectangle object and use the scales we made to set the width and height appropriately&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  bar.append(&quot;rect&quot;)
       .attr(&quot;y&quot;, function(d) { return bc_height-heightscale(d.value); })
       .attr(&quot;height&quot;, function(d) { return heightscale(d.value); })
       .attr(&quot;width&quot;, barWidth - 1);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We then attach the month names to each of the columns and $millions values at the peak&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  bar.append(&quot;text&quot;)
      .attr(&quot;x&quot;, barWidth / 2)
      .attr(&quot;y&quot;, bc_height+5)
      .attr(&quot;dy&quot;, &quot;.75em&quot;)
      .text(function(d) { return d.name.slice(0,3); });
  bar.append(&quot;text&quot;)
     .attr(&quot;x&quot;, barWidth / 2)
     .attr(&quot;y&quot;, function(d) { return bc_height-heightscale(d.value)-15; })
     .attr(&quot;dy&quot;, &quot;.75em&quot;)
     .text(function(d) {
       if (Math.round(d.value/1000000) &amp;gt; 0) {
         return &quot;$&quot; + Math.round(d.value/1000000) + &quot;m&quot;;
       }
       return &quot;&amp;lt; $1m&quot;;
     });
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that’s all there is to it ;) seriously, we just went from data to chart &amp;amp; labels :D&lt;/p&gt;

&lt;h4 id=&quot;appassetsjavascriptssegmentiojs&quot;&gt;app/assets/javascripts/segmentio.js&lt;/h4&gt;

&lt;p&gt;This is the full contents of the &lt;code class=&quot;highlighter-rouge&quot;&gt;segment.js&lt;/code&gt; file and while it does seem a bit hefty it is a little piece of gold. With this snippet many different kind of analytics and data warehousing can be enabled through a simple web interface on the segment website. This can funnel data to or from Google Analytics, Tableax, Amazon S3 and so many more we didn’t have time to experiment with them all. Many other code changes that would normally be required (for example to setup Google Analytics) are injected into the javasript that is served to respond to this code, so to enable Analytics no further code changes were necessary (and is supplied segment)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  window.analytics = window.analytics || []; // Create a queue, or get existing

  // A list of the methods in Analytics.js to stub.
  window.analytics.methods = ['identify', 'group', 'track',
    'page', 'pageview', 'alias', 'ready', 'on', 'once', 'off',
    'trackLink', 'trackForm', 'trackClick', 'trackSubmit'];

  // Define a factory to create stubs.
  window.analytics.factory = function(method){
    return function(){
      var args = Array.prototype.slice.call(arguments);
      args.unshift(method);
      window.analytics.push(args);
      return window.analytics;
    };
  };

  // For each of our methods, generate a queueing stub.
  for (var i = 0; i &amp;lt; window.analytics.methods.length; i++) {
    var key = window.analytics.methods[i];
    window.analytics[key] = window.analytics.factory(key);
  }

  // Define a method to load Analytics.js
  window.analytics.load = function(key){
    if (document.getElementById('analytics-js')) return;

    // Create an async script element based on your key.
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.id = 'analytics-js';
    script.async = true;
    script.src = ('https:' === document.location.protocol
      ? 'https://' : 'http://')
      + 'cdn.segment.io/analytics.js/v1/'
      + key + '/analytics.min.js';

    // Insert our script next to the first script element.
    var first = document.getElementsByTagName('script')[0];
    first.parentNode.insertBefore(script, first);
  };

  window.analytics.SNIPPET_VERSION = '2.0.9'; // version to track what's in the wild
  window.analytics.load('ACLMWlvkZzHKrlDBM4i3UBGaJf8FesSF'); // Load Analytics.js with our key
  window.analytics.page(); // Make the first page call to load the integrations

// accommodate Turbolinks and track page views
$(document).on('ready page:change', function() {
  analytics.page();
})

// track page views and form submissions TODO: update with our forms
$(document).on('ready page:change', function() {
  console.log('page loaded');
  analytics.page();
  analytics.trackForm($('#edit_contract'), 'Edited a contract'); // ID attribute of a form and
  analytics.trackForm($('#new_contact'), 'Generated a contract'); // a name given to the event.
})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;appassetsstylesheetsapplicationscss&quot;&gt;app/assets/stylesheets/application.scss&lt;/h4&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;application.scss&lt;/code&gt; file defines styles that are shared across the entire application. Just like the &lt;code class=&quot;highlighter-rouge&quot;&gt;pages.js&lt;/code&gt; file there are also scss files for each controller, but customising them too much can lead to an inconsistent user experience so most significant changes are made in the site wide &lt;code class=&quot;highlighter-rouge&quot;&gt;application.scss&lt;/code&gt;. First up we define some neat coloring and transparency for the site using fancy scss functions. Then we define a color scheme that is used throughout the styling for consistency and I have included a couple of examples below&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$orange: rgb(250,70,00);
$alpha75: .70;
$alpha50: .5;
$alpha25: .25;
$orangeAlpha75: rgba($orange, $alpha75);
$orangeAlpha50: rgba($orange, $alpha50);
$orangeAlpha25: rgba($orange, $alpha25);

$main-text-color: #222200;
$logo-color: #222200;
$header-background: $orangeAlpha75;
$main-background-color: #DFDAD3;
$input-color: $orangeAlpha75;
$input-active-color: $orangeAlpha50;
$input-alt-color: #222200;
$input-active-alt-color: #000000;

...

.container {
  color: $main-text-color;
  width: 99%;
}

.navbar {
  background-color: $header-background;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;appassetsmailersapplicationmailerrb&quot;&gt;app/assets/mailers/application_mailer.rb&lt;/h4&gt;

&lt;p&gt;This little snippet composes and sends a simple proof of concept email reminder and is triggered by the scheduled events we had a look at earlier. This simple example just sends a static string to a single email address, but could easily be customized to email the reporting officer a link to the reporting form that needs to be completed&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class ApplicationMailer &amp;lt; ActionMailer::Base
  default from: 'benjamin@codeforaustralia.org'

  def announce_email(contract, email)
    puts &quot;mailer CON:#{contract}&quot;
    @contract = contract
    mail(to: email, subject: &quot;Sample email&quot;, body: &quot;not much yet&quot;)
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;robotstxt-and-meta-data-the-good-kind&quot;&gt;robots.txt and meta data (the good kind)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_robot.jpeg&quot; alt=&quot;&quot; /&gt;
We have not explored the use of the robots.txt file in our project as people and robots scraping our site was not an issue that came up. However I feel it is pertinent to mention the file and its function in web culture and communication norms in discouraging errant web crawler activities&lt;/p&gt;

&lt;p&gt;Meta data is something that we have also not had an opportunity to explore but would be great for improving government interface design, the metadata information is used in modern platforms like Slack and Twitter to display fancy previews of the webpage that can be embedded or shared with other users. For example the departments logos could be used as the preview image, the contract title as the header and a body made up of the most vital details such as start, end and value&lt;/p&gt;

&lt;h3 id=&quot;gemfile-and-bundle&quot;&gt;Gemfile and bundle&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_rubies.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have used many libraries during the development process and these are specified in the file named “Gemfile”. This file is most often processed by the &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle&lt;/code&gt; command which manages the Ruby packages (or gems) installed on the system. We examine just a few snippets of the file below&lt;/p&gt;

&lt;p&gt;We specify the versions of Ruby and Rails that our project uses so that the &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle&lt;/code&gt; program can take care of managing which versions to run&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby '2.3.1'
gem 'rails', '~&amp;gt; 5.0.0', '&amp;gt;= 5.0.0.1'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here we specify that we are using the PostgreSQL database and the Puma web server which are minor upgrades to the default SQLite and WebBrick infrastructure used in Rails by default&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'pg', '~&amp;gt; 0.18'
gem 'puma', '~&amp;gt; 3.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The capybara and poltergeist libraries are used by our scraper to power a phantomjs browser for Tenders Vic and the rufus-scheduler library is used to automate the daily scraping routine&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'capybara', '&amp;gt;= 2.1.0'
gem 'poltergeist', '&amp;gt;= 1.9.0'
gem 'phantomjs', :require =&amp;gt; 'phantomjs/poltergeist'
gem 'rufus-scheduler'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The last segment here demonstrates dependency groups in the Gemfile. These requirements are only used in specific configurations or environments. This example is only used during test commands so our production environment won’t have these requirements installed. Guard and Minitest give us an improved and flashy interface when we run the tests. Scrutinizer and Capybara Screenshot are currently underutilized but provide for enhanced testing capabilities such as logging screen shots during tests for visual diffs and monitoring general code quality&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :test do
  gem 'minitest-reporters',       '&amp;gt;= 1.1.9'
  gem 'guard',                    '&amp;gt;= 2.13.0'
  gem 'guard-minitest',           '&amp;gt;= 2.4.4'
  gem 'capybara-screenshot'
  gem 'scrutinizer-ocular'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;build-configuration-files-cicd&quot;&gt;Build configuration files (CI/CD)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_timing.jpg&quot; alt=&quot;&quot; /&gt;
(, .scrutinizer.yml, .travis.yml)
We have experimented with many continuious integration and analytic tools during the fellowship and I would highly recommend the segment.io and semaphore platforms for future projects. I have already covered segment, and semephore is the developers equivilent… with a simple setup and configuration you get automated builds, testing and deployment on every &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt; on a public repository (a massive time saver)&lt;/p&gt;

&lt;h4 id=&quot;codeclimateyml&quot;&gt;.codeclimate.yml&lt;/h4&gt;

&lt;p&gt;The Code Climate service monitors you codebase and reports on code quality metrics, of course all metrics must be taken with a grain of salt but hopefully you’ll see the value in monitoring relative values over the lifetime of a project. For example monitoring the number of “fixme” and “todo” strings in a codebase can give you a sense of the ammount of work being delayed or put off. There may be good reasons or stylistic differences between developers that make any individual value unreliable, but by combining and aggregating general trends we can see when &lt;strong&gt;too much&lt;/strong&gt; work is being deferred or back loaded.&lt;/p&gt;

&lt;p&gt;The ratings-path segment specified which code should be analysed for quality (excluding auto-generated files for example) and the exclude segment prevents external dependencies and tests from being included in the analysis at all&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;engines:
  rubocop:
    enabled: true
  bundler-audit:
      enabled: true
  fixme:
      enabled: true
  markdownlint:
      enabled: true
  eslint:
      enabled: true
  csslint:
      enabled: true
  duplication:
      enabled: true
    config:
        languages:
      - ruby
      - javascript
ratings:
  paths:
  - app/**
  - lib/**
  - &quot;**.rb&quot;
  - &quot;**.go&quot;
exclude_paths:
- spec/**/*
- &quot;**/vendor/**/*&quot;
- public/assets/**
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;git-and-gitignore&quot;&gt;.git and .gitignore&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/102_cfg2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The .gitignore file is used to flag files as not appropriate for version control. In the good-old-days this is where you would exclude any files that contained sensitive information, but as you have already seen this has been replaced in modern code with environment variables that can’t be accidentally leaked. We have excluded a few sensitive data files such as performance report raw data and other restricted information (perhaps a local directory referenced by an environment variable might be a better precaution). Then a few of the more regular development artefacts such as the database itself, log files and cross reference indexes are also excluded from the repository here&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# private file of public data
TendersVicDataSingleLine.csv
db/backup/CprPerformanceReport.csv
db/backup/CsrPerformanceReport.csv
db/backup/Contract.csv
db/data/performance.csv

# ignore cscope/tags files
*.db
*.files
*.out
tags

*.gem
*.rbc
/.config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><summary type="html">31/01/2017</summary></entry><entry><title type="html">What If… The DTF fellowship was with Tenders Vic?</title><link href="http://localhost:4000/DTF-Blog/Ben-WhatIf-DTF-TendersVIC/" rel="alternate" type="text/html" title="What If... The DTF fellowship was with Tenders Vic?" /><published>2017-01-30T00:00:00+11:00</published><updated>2017-01-30T00:00:00+11:00</updated><id>http://localhost:4000/DTF-Blog/Ben-WhatIf-DTF-TendersVIC</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-WhatIf-DTF-TendersVIC/">&lt;p&gt;&lt;em&gt;30/01/2017&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-if-the-dtf-fellowship-was-with-tenders-vic&quot;&gt;What if… the DTF fellowship was with Tenders Vic?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/spider-hi.jpeg&quot; alt=&quot;&quot; /&gt;
I wanted to try exploring some of the blockers we experienced working at the Department of Treasury and Finance and show off some auxiliary work I’ve been able to achieve by looking at what might have happened in a subtly different universe… so subtle that it’s almost the universe we live in now. The DTF public servant who formed the challenge we participated in and championed its progress through the process has recently been reassigned into another unit in the same grouping as Tenders VIC. This has already resulted in increased contact between our team and the Tenders Vic team and if the challenge was being formed now it would most probably be identified as the biggest bottleneck worth working on. I’m guessing that our project challenge would have been a government spending dashboard using the tenders Vic data, much like what we’ve been able to create for the construction group&lt;/p&gt;

&lt;h3 id=&quot;are-you-sure-you-dont-want-me-to-scrape-anything&quot;&gt;Are you sure you don’t want me to scrape anything?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/spider_ready.jpeg&quot; alt=&quot;&quot; /&gt;
With my preferred task unnecessary I wonder what I would have done early in the project. We would have still been prototyping a UI on paper so that much would have been much the same. What did change in the early stages of the project was that we already knew what data we had to work with and had sample extracts and example data sets to play with. We also could have built on prior open source “government spending dashboards” like the UKs &lt;a href=&quot;https://www.gov.uk/performance/g-cloud&quot;&gt;gov.uk&lt;/a&gt; and Australias own &lt;a href=&quot;http://lovemetender.com.au/&quot;&gt;LoveMeTender&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It would have also been exciting to consider an “all levels of government” dashboard by combining council budgets, Tenders Vic contracts and Aus Tenders contracts. This dataset could be combined with the &lt;a href=&quot;http://planningalerts.org.au/&quot;&gt;Planning Alerts&lt;/a&gt; data sets to create a “whole of economy” view of construction across Victoria. This would allow departments to monitor the general market trends and better predict the best moment to enter the market based on industry capacity and utilisation&lt;/p&gt;

&lt;p&gt;There was a few simple and easy quick wins working with the Tenders Vic group to improve the site in-situ. Simply adding an appropriatly crafted &lt;a href=&quot;https://en.wikipedia.org/wiki/Robots_exclusion_standard&quot;&gt;robots.txt&lt;/a&gt; improved the searchability of the site and adding appropriate &lt;a href=&quot;http://www.w3schools.com/tags/tag_meta.asp&quot;&gt;meta tags&lt;/a&gt; to the headers of pages made links and shares of contracts more useful and presentable. Then adding social media links and share buttons only required cosmetic changes&lt;/p&gt;

&lt;h3 id=&quot;getting-a-dataset-onto-datavicgov&quot;&gt;Getting a dataset onto data.vic.gov&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/spider-meeting.jpeg&quot; alt=&quot;&quot; /&gt;
It was always interesting talking to the Tenders Vic people and demonstrating the amazing things that could be done with the data when it’s put into the right hands. In this world I was in some of the meetings where they decide that updating the current system would cost too much and we’d better just keep using it… like those are the only options. That’s about when I jump up and yell “No dammit!, every day you continue to use this system costs you hours of manual fiddling and costs other departments hours of uncertainty and agony!”, I’d take a deep breath and compose myself, straighten my shirt and gently cough, before blurting out “don’t you see that people give up because this system is just too unwieldy, they give up on getting the right data for the decision they need to make, they give up on getting timely information on the projects that matter to their units, they just start to give up on the public service as a whole and come to expect this level of service, and this costs Australia more and more and more in wasted productivity every day it’s allowed to continue!”… and that’s about when they kick me out of those meetings&lt;/p&gt;

&lt;p&gt;I suppose because of the small wins we’d made early, despite being kicked out of the meetings, Tenders Vic was convinced that something could be done now without spending a small fortune on an upgrade. One of the Tenders Vic crew stepped up to become custodian of the Tenders Vic data and then it was just a matter of writing a tool on the Tenders Vic platform to access the database and upload onto a morph.io database. This then unlocked the download and API functionality to get onto the Data.Vic platform which we had to get by web scraping and &lt;a href=&quot;https://www.righttoknow.org.au/request/contracts_published_on_tenders_v&quot;&gt;freedom of information requests&lt;/a&gt; in the normal world&lt;/p&gt;

&lt;h3 id=&quot;linking-tenders-with-contracts&quot;&gt;Linking Tenders with Contracts&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/spider-link.jpeg&quot; alt=&quot;&quot; /&gt;
With the Tenders Vic data now on Data.Vic we were then able to turn our attention on the linking of tenders and contract data. Thankfully in this parallel world we still had the same interview opportunity with the PRU team and just like in our universe the significance of the interview passed us by on the day. However in this universe during our next sprint planning session we all agreed that writing a little app for the PRU was a huge priority and we realised that by writing a little app here we could have big wins in terms of reducing data entry errors, providing links to the related tenders of a contract, tracking the project a contract falls under and breaking out address information where relevant&lt;/p&gt;

&lt;h3 id=&quot;mapping-the-future&quot;&gt;Mapping the Future&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/spider_maps.jpeg&quot; alt=&quot;&quot; /&gt;
After creating the PRU tool for transferring tenders to contracts the Code for Australia fellowship was starting to wrap up and we only had a few weeks to go could we use the newly available address data to create a map of government spending across Victoria. Unfortunately we made the mistake of rushing and ended up committing the cardinal sin of software development by breaking the build… several times, often before demonstrations with important stakeholders resulting in sketchy feedback. While a more cautious and incremental approach might have yielded some fruit by the end of the fellowship our rushed attempt had to be abandoned and we had to roll back to a prior stable version loosing quite a bit of work and having nothing new to demonstrate in our final sprint showcases, dampening enthusiasm for the program as a whole&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/spider_crystal.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><summary type="html">30/01/2017</summary></entry><entry><title type="html">Project Structure 101</title><link href="http://localhost:4000/DTF-Blog/Ben-ProjectStructure101/" rel="alternate" type="text/html" title="Project Structure 101" /><published>2017-01-25T00:00:00+11:00</published><updated>2017-01-25T00:00:00+11:00</updated><id>http://localhost:4000/DTF-Blog/Ben-ProjectStructure101</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-ProjectStructure101/">&lt;p&gt;&lt;em&gt;25/01/2017&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this blog we will take you through a whirlwind tour of the application we’ve built during the fellowship, explain some of the conventions we’ve followed and where we’ve written our own playbook. We’ll begin by having a look at the top level directory structure in our project and mention the most important configurations and files&lt;/p&gt;

&lt;p&gt;In the second post we’ll peek in at the most important configurations and files&lt;/p&gt;

&lt;p&gt;In a third we’ll take a closer look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;app/&lt;/code&gt; directory and see how this relates to the MVC architecture of rails then we’ll end our journey by looking in at a few of the views used in the application and how they relate to their related controllers and models&lt;/p&gt;

&lt;p&gt;This description is based on the repository as it existed at the 16th of January as there are currently errors in the CCR deployment&lt;/p&gt;

&lt;h3 id=&quot;getting-the-source&quot;&gt;Getting the source&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_src.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;It’s fun… if you like source code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The source code for the project and standalone scraper can be found at the following locations, visit these pages in a browser to view and explore the github projects online&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CodeforAustralia/dtf-genesis&quot;&gt;https://github.com/CodeforAustralia/dtf-genesis&lt;/a&gt;
&lt;a href=&quot;https://github.com/PuZZleDucK/VIC_Tenders&quot;&gt;https://github.com/PuZZleDucK/VIC_Tenders&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to work on your own copy of the source you can fork your own copy of the repository or just clone a copy of ours by running the following commands&lt;/p&gt;

&lt;div linenos=&quot;true&quot; class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/CodeforAustralia/dtf-genesis.git
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/PuZZleDucK/VIC_Tenders
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;application-root-directory&quot;&gt;Application root directory&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_1.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;You gotta start somewhere&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── .git/
├── app/
├── bin/
├── config/
├── coverage/
├── db/
├── lib/
├── log/
├── public/
├── test/
├── tmp/
├── vendor/
├── .buildpacks
├── .codeclimate.yml
├── .gitignore
├── .ruby-gemset
├── .ruby-version
├── .scrutinizer.yml
├── .travis.yml
├── config.ru
├── erd.pdf
├── Gemfile
├── Gemfile.lock
├── LICENSE
├── Procfile
├── Rakefile
└── README.md
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Some preliminary explanations about file and directory structure are probably in order. One of the more arcane customs are the files and directories beginning with a “.” also referred to as “dot files”, this is a unix convention for hiding files and is often used for configuration files a user is unlikely to require or use often&lt;/p&gt;

&lt;p&gt;In particular the “.git/” directory is a very special directory and should not be created or edited manually. It is the directory the git revision control program uses to store all the versions, branches, tags and history of your source code. This directory is created automatically when you run the “git clone” commands above and are unique to your system and shout not be committed into the repository or shared in any way… which is a nice segway into the “.gitignore” file, which lists a bunch of files and directories that git should not backup which could range from system dependant configurations, or log files through to sensitive data files&lt;/p&gt;

&lt;p&gt;The files with the extention “.md” are called “markdown files”, these are text files with a little bit of extra formatting information allowing them to be easily converted into documents or web pages while still being readable in plain text. The &lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; file contains much introductory material on setting up your own instance of the CCR system&lt;/p&gt;

&lt;p&gt;We’ll delve into the &lt;code class=&quot;highlighter-rouge&quot;&gt;.codeclimate.yml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.scrutinizer.yml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; in the “Project Structure 102” blog&lt;/p&gt;

&lt;h3 id=&quot;config&quot;&gt;Config&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_2.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Choices, choices, choices&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config/
├── environments/
│   ├── development.rb
│   ├── production.rb
│   └── test.rb
├── initializers/
│   ├── active_admin.rb
│   ├── active_record_extension.rb
│   ├── application_controller_renderer.rb
│   ├── assets.rb
│   ├── backtrace_silencers.rb
│   ├── clear_logs.rb
│   ├── cookies_serializer.rb
│   ├── devise.rb
│   ├── filter_parameter_logging.rb
│   ├── inflections.rb
│   ├── mime_types.rb
│   ├── new_framework_defaults.rb
│   ├── scheduler.rb
│   ├── session_store.rb
│   ├── smart_listing.rb
│   └── wrap_parameters.rb
├── locales/
│   ├── devise.en.yml
│   └── en.yml
├── application.rb
├── boot.rb
├── cable.yml
├── database.yml
├── environment.rb
├── puma.rb
├── routes.rb
└── secrets.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The configuration directory contains all kinds of important (no supprise) settings used by the application and hosting provider. The &lt;code class=&quot;highlighter-rouge&quot;&gt;environment&lt;/code&gt; directory contains settings that may change between different deployment targets such as ‘production’ or ‘testing’. Most of the &lt;code class=&quot;highlighter-rouge&quot;&gt;initializers&lt;/code&gt; remain unused by us with the exception of &lt;code class=&quot;highlighter-rouge&quot;&gt;scheduler.rb&lt;/code&gt; which kicks of recurring tasks such as daily web-scraping which we’ll look at closer in 102. The &lt;code class=&quot;highlighter-rouge&quot;&gt;locales&lt;/code&gt; directory contains internationalisation settings which we have not utilized&lt;/p&gt;

&lt;p&gt;Other crucial ones we’ll look at in depth next time are &lt;code class=&quot;highlighter-rouge&quot;&gt;production.rb&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;application.rb&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;database.yml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;environment.rb&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;puma.rb&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.yml&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;db&quot;&gt;DB&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_3.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Data is like mortar only it’s incorporeal and doesn’t stick thinks together&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db/
├── backup/
│   ├── ....csv
│   └── ....csv
├── data/
│   ├── agencies.csv
│   ├── contract-status.csv
│   ├── contract-types.csv
│   ├── council.csv
│   ├── csr_contract.csv
│   ├── csr_referee_contact.csv
│   ├── performance.csv
│   ├── supplier.csv
│   ├── TendersVicDataSingleLine.csv
│   ├── tendersvic_mock_contracts.csv
│   └── unspsc.csv
├── migrate/
│   ├── 20160920073558_create_contracts.rb
│   ├── 20160927043201_   &quot;       &quot;  .rb
│   ├── 20160927044609_   &quot;       &quot;  .rb
│   ├── 20160927045940_   &quot;       &quot;  .rb
│   └── 20170106024818_create_ccr_performance_reports.rb
├── schema.rb
└── seeds.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;db&lt;/code&gt; directory is also resonably self explanitory as the place to go for any database information. The &lt;code class=&quot;highlighter-rouge&quot;&gt;backup&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; directories contain various “.csv” files used to load or dump data to and from the CCR. The seeds file contains a few simple data items required to setup the CCR such as tables for the status codes and associated text&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;migrate/&lt;/code&gt; directory and &lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rb&lt;/code&gt; file have a special relationship that Rails attempts to maintain. These two sources should describe the same database structure via two different means, the migrations describe how to build the database step by step as it was done throughout the project complete with renaming and reversed decisions. The &lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rb&lt;/code&gt; file contains the current state of the database and will be equivalent to running all the migrations and dumping the database state. We’ll look a bit closer at the schema file in 102&lt;/p&gt;

&lt;h4 id=&quot;tests&quot;&gt;tests&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_4.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Just like walls, tests give you security and a fuzzy warm feeling&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;test/
├── controllers/
│   ├── contracts_controller_test.rb
│   ├──    &quot;     _controller_test.rb
├── fixtures/
│   ├── contracts.yml
│   ├──    &quot;     .yml
├── helpers/
├── integration/
│   ├── linker_test.rb
│   └── scraper_test.rb
├── mailers/
├── models/
│   ├── contract_test.rb
│   ├──     &quot;   _test.rb
└── test_helper.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The test directory contains all the setup, data and code to run and verify the tests. The tests for this project are minimal and simple and do not guarantee program correctness, but they are a handy sanity check and safety rope to use during program development&lt;/p&gt;

&lt;h3 id=&quot;app-structure&quot;&gt;App structure&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_5.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;With the foundations prepared we were ready to start adding “capabilities”&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/
├── admin/
│   ├── contract.rb
│   ├──    &quot;    .rb
│   └── user.rb
├── assets/
│   ├── config/
│   ├── images/
│   ├── javascripts/
│   │   ├── application.js
│   │   ├── charts.js
│   │   ├── segmentio.js
│   │   ├──     &quot;    .js
│   └── stylesheets/
│       ├── application.scss
│       ├──      &quot;     .scss
├── channels/
│   └── application_cable/
├── controllers/
│   ├── contracts_controller.rb
│   ├──     &quot;    _controller.rb
│   └── suppliers_controller.rb
├── helpers/
│   ├── contracts_helper.rb
│   ├──     &quot;    _helper.rb
│   └── value_types_helper.rb
├── jobs/
│   └── application_job.rb
├── mailers/
│   └── application_mailer.rb
├── models/
│   ├── contract.rb
│   ├──     &quot;   .rb
│   └── user.rb
└── views/
    ├── contracts/
    ├──     &quot;  /
    └── users/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We’ll delve into the &lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt; directory heavily when we cover the Model, View, Controller paradim in the third article detailing the CCR system so I’ll cover the &lt;code class=&quot;highlighter-rouge&quot;&gt;models&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;views&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;helpers&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;controllers&lt;/code&gt; directories in detail then. The &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; directory contains the images, styles and javascript included in almost every page on the site and we’ll have a look at the most important of these in the 102 section. The &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;channels&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;jobs&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mailers&lt;/code&gt; directories are not utilised in our project and not covered in detail.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed this overview and will be back soon to see the gritty details inside some of these files in Project Structure 102&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/101_6.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Oh my, what have we created!&lt;/em&gt;&lt;/p&gt;</content><summary type="html">25/01/2017</summary></entry><entry><title type="html">What If… The DTF fellowship was for 12 months?</title><link href="http://localhost:4000/DTF-Blog/Ben-WhatIf-DTF-1Year/" rel="alternate" type="text/html" title="What If... The DTF fellowship was for 12 months?" /><published>2017-01-24T00:00:00+11:00</published><updated>2017-01-24T00:00:00+11:00</updated><id>http://localhost:4000/DTF-Blog/Ben-WhatIf-DTF-1Year</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-WhatIf-DTF-1Year/">&lt;p&gt;&lt;em&gt;24/01/2017&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;warning-strikecomic-bookstrike-graphic-novel-trope-ahead&quot;&gt;Warning: &lt;strike&gt;Comic Book&lt;/strike&gt; Graphic Novel Trope Ahead&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/IF_5.jpg&quot; alt=&quot;&quot; /&gt;
As the fellowship begins to wrap up and the focus turns away from development and towards the future I thought it might be fun to do a bit of a &lt;a href=&quot;https://en.wikipedia.org/wiki/What_If_(comics)&quot;&gt;What If…?&lt;/a&gt; series on our time here at DTF. The first in this series is:&lt;/p&gt;

&lt;h3 id=&quot;what-if-the-dtf-fellowship-was-for-12-months&quot;&gt;What if… the DTF fellowship was for 12 months?&lt;/h3&gt;
&lt;p&gt;I’d like to explore where we are at by looking ahead at where we could be going in the next six months if the world were just a little bit different than it is now&lt;/p&gt;

&lt;h3 id=&quot;finishing-the-form-design&quot;&gt;Finishing the Form Design&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/IF_1.jpg&quot; alt=&quot;&quot; /&gt;
With six months left on the fellowship we were just be beginning the first of many iterations on the usability of our updated online reporting form. We decided that we could start a short two month trial with a couple of willing departments and set up two more accounts for use in the trial&lt;/p&gt;

&lt;p&gt;At the completion of the trial we were able to receive some feedback from the users of the system, but we were able to identify a “choke point” in the process through the analytics we set up and we could tell users were having issues with one of the steps even though they just assumed “that’s how it’s meant to work”. We were able to identify an alternative source for the information required in that step and were able to eliminate it entirely from the process saving public servants from having to manually retrieve inconvenient data&lt;/p&gt;

&lt;h3 id=&quot;automated-reminders-and-workflow&quot;&gt;Automated reminders and workflow&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/IF_2.jpg&quot; alt=&quot;&quot; /&gt;
It was so frustrating to have all the pieces in place but not have time to complete an important feature, although that’s not a problem for us in this world… since we completed all the requisite components during the first half of the fellowship we were able to simply assemble an automated workflow monitoring and reminder system while the form design prototyping was going on. The best thing was that we were able to run two quick one-month trials of the system and iterate on the feedback we got. Now the estimated dates for reporting are more likely to be correct, the responses we get are more likely to be accurate, we are more likely to hit the reporting officer with our first email and all kinds of other stakeholders (such as supervising officer and supplier) are also kept in the loop on the progress of reporting&lt;/p&gt;

&lt;h3 id=&quot;considered-deployment&quot;&gt;Considered Deployment&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/IF_3.jpg&quot; alt=&quot;&quot; /&gt;
We were able to explore other hosting platforms in the time we had left while the second set of trials were running. We were able to consider a range of different hosing solutions from the “fully automatic no thinking” Heroku style to the more “bare bones build it yourself” hosting offered by AWS and Digital Ocean&lt;/p&gt;

&lt;p&gt;It turns out these were both sub-optimal and in the time available we were able to explore a government hosted solution on &lt;a href=&quot;https://www.dta.gov.au/what-we-do/platforms/cloud/&quot;&gt;cloud.gov.au&lt;/a&gt; which in retrospect is where we should have set our sights from the beginning. Still, the experience we had deploying to Digital Ocean was useful and made the deployment to cloud.gov.au familiar and much smoother than if we were learning it as we were going&lt;/p&gt;

&lt;p&gt;Even after all that we still had a month to spend polishing and better testing the system we’ve put in place&lt;/p&gt;

&lt;h3 id=&quot;caught-out&quot;&gt;Caught Out&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/IF_4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately over the longer time frame the cracks in my personal systems started to show and the information overload I was experiencing got the better of me. I stopped checking my CfA and DTF emails even on a weekly basis and started to find out via slack that I was missing out on appointments and communications I was expected to respond to… so it’s not all roses and cherries on this alternative Earth&lt;/p&gt;

&lt;p&gt;Hope you enjoyed this first “What if…?” post (despite the sad, sad ending) and will join me in the (possible) future for such episodes as “What if… the DTF fellowship program only lasted a month?”, “What if… CfA had a fellowship on Jupiter?” and “What if… the DTF fellowship was with Tenders Vic?”&lt;/p&gt;</content><summary type="html">24/01/2017</summary></entry><entry><title type="html">CfA at Linux Conf Au 2017</title><link href="http://localhost:4000/DTF-Blog/Ben-LCA_Wrapup/" rel="alternate" type="text/html" title="CfA at Linux Conf Au 2017" /><published>2017-01-23T00:00:00+11:00</published><updated>2017-01-23T00:00:00+11:00</updated><id>http://localhost:4000/DTF-Blog/Ben-LCA_Wrapup</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-LCA_Wrapup/">&lt;p&gt;&lt;em&gt;23/01/2017&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image from “Planning Alerts, State Contracts then The World”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/LCA_3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;cfa-at-linux-conf&quot;&gt;CfA at Linux Conf&lt;/h3&gt;

&lt;p&gt;Last week a couple of us fellows got to go to Linux Conf Au 2017 and present on the work we’ve been doing with the department over the past six months. Johan Codinha was presenting about the development of the “citizen scientist” in Australia and more specifically the &lt;a href=&quot;https://codeforaustralia.github.io/biodiversity/blog.html&quot;&gt;Victorian Biodiversity Atlas project&lt;/a&gt; he’s been working on at DELWP and was titled “Interface citizen scientists with government”&lt;/p&gt;

&lt;p&gt;My presentation, titled “Planning Alerts, State Contracts then The World”, was about the &lt;a href=&quot;http://planningalerts.org.au/&quot;&gt;Planning Alerts&lt;/a&gt; by &lt;a href=&quot;http://www.openaustralia.org.au/&quot;&gt;Open Australia&lt;/a&gt; and how this influenced and inspired our project at the Department of Treasury and Finance&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CfA stickers and flyers nestled in between FreeBSD and Drupal&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/LCA_2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;open-knowledge-miniconf&quot;&gt;Open Knowledge Miniconf&lt;/h3&gt;

&lt;p&gt;The Johan and myself were speakers in the Open Knowledge miniconf and ended up bracketing the event with Johan as the first speaker and myself as the last&lt;/p&gt;

&lt;p&gt;After Johan was Steven Ellis with a talk titled &lt;a href=&quot;https://youtu.be/ceYMBBiVfCE?list=PLwGcrAT3m_vgpwSN3UWxwyrtAm3b4NGb-&quot;&gt;“Almost Open - Just close the door behind you”&lt;/a&gt; where he discussed the changing dynamic of cultural forces exerted by the FOSS community on government and business. He encouraged us to try to get the government to simply acknowledge that they depend on and derive huge value from open source software already. For some reason governments seem unable to see (or publicly acknowledge) the benefits they already reap from open source in an eerily similar way that businesses were doing in the nineties and naughties. Steven also suggesting the financial benefits of FOSS to government such as the reduced maintenance costs by sharing the burden of support, negotiaion freedoms available due to a lack of vendor lock in and the benefits of a flourishing ecosystem feed by timely and effective access to data (read APIs). These benefits seem so obvious to those of us from the FOSS community that we forget that this might not be so obvious to a public servant for whom these are all new concepts&lt;/p&gt;

&lt;p&gt;There was then an interesting talk by Gavin Tapp on “How govCMS is part of the open government and open data movement in Government”. I was glad he included a brief outline of the lifespan of the Gov 2.0 taskforce that crystallised my understanding of how this initiative fits in with a lot of what we are doing. He mentioned an interesting &lt;a href=&quot;http://www.finance.gov.au/sites/default/files/DoFD%20CMS%20Review%20Report%20-%20V2%202%20FINAL.pdf&quot;&gt;report comparing different CMS solutions&lt;/a&gt; performed by the federal treasury when considering GovCMS which I’m looking forward to browsing over sometime in the coming week. One thing he pointed out that was quite poingiant to me was that they did their best to discourage departments from requiring registration before accessing the data, unlike our project which now has all the information locked up tight… this is the opposite of open and transparent and does not set a good example for others to follow&lt;/p&gt;

&lt;p&gt;After lunch Steven Pousty presented &lt;a href=&quot;https://youtu.be/Wm6JS3ATa1E?list=PLwGcrAT3m_vgpwSN3UWxwyrtAm3b4NGb-&quot;&gt;“Building My Own Little World with Open Data”&lt;/a&gt; where he discussed a data mapping and visualisation project comparing bird sightings and other environmental factors such as temperatures, seasons and tide levels. The CfA DELWP project even got a shout out for having similar data sets and interests in the common-boring-case being the most pertinent&lt;/p&gt;

&lt;p&gt;Cat Allman from Google then discussed &lt;a href=&quot;https://youtu.be/Dq330EYbucg?list=PLwGcrAT3m_vgpwSN3UWxwyrtAm3b4NGb-&quot;&gt;“Open Meets Science @ Google”&lt;/a&gt; where she discussed Googles involvement in open source scientific tools and what they are doing to promote and educate the next generation of code-scientist hybrids. Software carpentry got a strong mention and is a movement I feel I should look into in Melbourne (and kick start a carpentry school if it’s not already here somewhere)&lt;/p&gt;

&lt;p&gt;Then after my talk Pia Waugh engaged us all in an ad lib conversation about the intersection of the FOSS societies and government culture. She encouraged us all to try to bestow the maker-mindset on public servants and open there eyes to techniques and capabilities they never knew they had (but had access to all along)&lt;/p&gt;

&lt;h3 id=&quot;day-2-keynote--law-and-policy-miniconf&quot;&gt;Day 2 Keynote &amp;amp; Law and Policy Miniconf&lt;/h3&gt;

&lt;p&gt;Tuesday was the Law and Policy miniconf and almost felt like a continuation of the Open Knowledge miniconf with most of the same faces and many related topics of interest. We also kicked off the day with a keynote by Pia Waugh titled &lt;a href=&quot;https://youtu.be/J6IqGuxCKa8?list=PLwGcrAT3m_vjU8DFL2K78ydGsrfz9Ty4O&quot;&gt;“Choose Your Own Adventure, Please!”&lt;/a&gt;. An important concept she covered was that the liberty we experience is dependant on the tools we can use, this is the “sufficiency” part of “free software being a necessary but not sufficient condition for liberty”. For example I’m “free” to build a house and (to a limited extent) I’m “free” to extend and modify my home… but in reality I’m not competent in the skills that would enable me to exercise those freedoms (carpentry, painting and so on). In the same way all the open source software in the world won’t help government servants if they are digitally illiterate and unable to capitalise the benefits&lt;/p&gt;

&lt;p&gt;The miniconf kicked off with a “fishbowl discussion” on GPL Compliance. This fishbowl format was a new experience for me, the discussion began with five chairs at the front of the room and four audience members take four of the five chairs with the last one being left empty. These four kick off the discussion and any remaining audience members left with a question or comment can jump up and sit in the fifth chair, then one of the current people up the front have to concede their seat so that there is always a free chair for someone to take. This worked quite well because were were all a bunch of fussy, curious pushy para-legal-pedantic-nerds, but I fear it would suffer from the effect of amplifying already loud voices in some groups with more nominal cultures&lt;/p&gt;

&lt;p&gt;Bradley Kuhn gave a presentation titled &lt;a href=&quot;https://youtu.be/C6HDJThJjyw?list=PLwGcrAT3m_vgX_uPVIWj6YEH5pqH9dJuJ&quot;&gt;“Beautiful Build: Releasing Linux Source Correctly”&lt;/a&gt; talking about his experiences encouraging GPL compliance and the finer definition of some simple terms such as “reasonably skilled”, “complete and corresponding source” and (I’m serious here) “the”&lt;/p&gt;

&lt;p&gt;Adam Poultons talk “Decentralisation - Removing the Middle Man from Current Centralised Systems” touched on a few topics including the (surprisingly strong) relation between blockchain technology and stone currencies, how Twitter and Facebook are becoming our de-facto decentralised news sources and he also mentioned and explained the &lt;a href=&quot;https://voteflux.org/&quot;&gt;Flux party&lt;/a&gt; which has recently arisen in Australia&lt;/p&gt;

&lt;p&gt;I’m a big fan of Paul Foxworthy from seeing his visualizations of voter preferences in Australian elections. That aside, his talk titled &lt;a href=&quot;https://youtu.be/huk-m19ZEzI?list=PLwGcrAT3m_vgX_uPVIWj6YEH5pqH9dJuJ&quot;&gt;“Pushing on a Piece of String - OSIAs adventures in influencing governments”&lt;/a&gt; felt like he’d stolen the material from my inner most secret journal… except I don’t work for OSIA. During the talk he mentions that they had surveyed the ERPs being used by government and realised that over 200 unique and incompatible ERPs were being individually purchased when the government could use this extraordinary buying power to bargain for a better deal or at least compatible systems. Paul also stressed the immense savings that could be made by a government by embracing open machine readable standard formats and open source software to reduce costs of inevitable migrations and maintenance of information systems&lt;/p&gt;

&lt;p&gt;Pia Waugh then gave a talk on &lt;a href=&quot;https://youtu.be/2EuuhP6e6Rg?list=PLwGcrAT3m_vgX_uPVIWj6YEH5pqH9dJuJ&quot;&gt;“the relationship between openness and democracy”&lt;/a&gt; discussing the importance of openness and transparency as a prerequisite for democracy. “Democracy without openness always moves away from democracy”, Pia warns us and encourages us to remember that all the positive aspects of democracy are lost if we end up with a closed and opaque democracy… what use is it choosing your leader if you only have a choice of dictators, freedom is not sufficient, but it is necessary (where have I heard that before :p). One other choice moment during this impromptu talk was Pia riffing on people talking about government as a single monolithic monstrous entity, kind of like a Hydra. However those of us with hands on experience working with and for government understand it’s more like a pit of snakes&lt;/p&gt;

&lt;p&gt;Then there was a panel on &lt;a href=&quot;https://youtu.be/_Kx8OJW6qho?list=PLwGcrAT3m_vgX_uPVIWj6YEH5pqH9dJuJ&quot;&gt;“The Future of Community Efforts to Protect FOSS using Legal Tools”&lt;/a&gt; run by Donna Benjamin which was a little less structured but still chock full of interesting tidbits, including the fact that Open Australia got resisted as an official charity by being a “Digital Library”. We also covered some topics related to foundations, not-for-profits and charities and the pressures and forces we need to balance to have successful organisations&lt;/p&gt;

&lt;p&gt;The final talk in the Law and Policy miniconf was &lt;a href=&quot;https://youtu.be/neXXomOOoYI?list=PLwGcrAT3m_vgX_uPVIWj6YEH5pqH9dJuJ&quot;&gt;“A Layperson’s Guide for Talking about Free Software Law”&lt;/a&gt; by Rikki Endsley who is an editor for opensource.com. It was an interesting talk from the internationalisation and globalisation perspective but not super relevant to our current predicaments&lt;/p&gt;

&lt;h3 id=&quot;other-bits-and-pices&quot;&gt;Other bits and pices&lt;/h3&gt;

&lt;p&gt;The rest of the conference continued to include material relevant to our work with government but also included talks from a broad spread of possible topics. Michael Cordovers talk on &lt;a href=&quot;https://youtu.be/AfX6MGKNC34?list=PLwGcrAT3m_vj42HSjrNXGFcA4bZ-ban1D&quot;&gt;“Future privacy”&lt;/a&gt; touched on the importance of anonymization and the lack of importance of actual names in modern identity managment&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/7Js1PxZHjSo?list=PLwGcrAT3m_vj42HSjrNXGFcA4bZ-ban1D&quot;&gt;“Engaging with Open Data through Video Games”&lt;/a&gt; by the trio Paris Buttfield-Addison, Jon Manning and Tim Nugent had a few helpful tips on presenting an interesting an exciting hackathon project even if it’s not a game (and the importance of keeping it simple and keeping focused)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/R4SPny8FaAM?list=PLwGcrAT3m_vj42HSjrNXGFcA4bZ-ban1D&quot;&gt;“Why haven’t you licensed your project?”&lt;/a&gt; by Richard Fontana made me think that a role of “Licencing Zealot” at hackathons might not be as ridiculous as I’d first thought, there was also some food for thought about the post-open-source culture that has emerged over the past few years&lt;/p&gt;

&lt;p&gt;Nat Dudley did an interesting (but almost entirely irrelevant) talk on &lt;a href=&quot;https://youtu.be/ZE4BNwBwYXw?list=PLwGcrAT3m_vj42HSjrNXGFcA4bZ-ban1D&quot;&gt;“Ada ❤️ Lace”&lt;/a&gt; and the role knitting played in the Belgium resistance movement, and more seriously the role a good community plays in an ecosystem&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/6x-HYunGtR0?list=PLwGcrAT3m_vj42HSjrNXGFcA4bZ-ban1D&quot;&gt;“Handle Conflict, Like a Boss!”&lt;/a&gt; by Deb Nicholson was also in the “mostly irrelevant” basket, but included the hilarious example of conflicted interests in trying to run a “Dog &amp;amp; Boat Wash” business. Someone from the audience pointed out that they had seen a “Dog, Car &amp;amp; Boat Wash”… what a nightmare that would be&lt;/p&gt;

&lt;p&gt;And speaking of nightmares, Timothy Terriberry gave a talk on the &lt;a href=&quot;https://youtu.be/lzPaldsmJbk?list=PLwGcrAT3m_vj42HSjrNXGFcA4bZ-ban1D&quot;&gt;“Progress in the Alliance for Open Media”&lt;/a&gt; discussing the ups and downs of negotiating with vendors of various kinds in establishing an open and shared media codec… and I thought government was a Kafkaesque nightmare :p&lt;/p&gt;

&lt;p&gt;If I have any time over the rest of the fellowship I’ll endeavour to cover more of the talks in greater depth and discuss them in relation to our project and CfA in general&lt;/p&gt;

&lt;h3 id=&quot;videos-from-cfa-lca-talks&quot;&gt;Videos from CfA LCA talks&lt;/h3&gt;

&lt;p&gt;The Network and Audio/Visual crews at LCA are just amazing and have already edited, mixed and mastered the LCA talks so they are available to download right now! This is incredible especially when put into context, remember that LCA is run by a non-profit organisation and run for the most part by volunteers, there are up to six simultaneous events, talks or workshops being run and recorded at any given moment, the events start at 9 in the morning and don’t wrap up until after 5. That’s 48 hours of footage a day, or about 240 hours of footage over the week and it was mostly up on Youtube by the time we all got into work on Monday&lt;/p&gt;

&lt;p&gt;They have achieved this by ruthlessly automating where possible, they use flexible systems that allow for simple assumptions and refinement and correcting later, placing great trust upon the volunteers (who have in many cases just learned to use a video capture system), empowering speakers to review and confirm their own work and pre-confirming any details possible prior to crunch time&lt;/p&gt;

&lt;p&gt;We could all learn a lot from the LCA A/V team… Thanks for another great year of memories LCA NOC &amp;amp; A/V&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Planning Alerts, State Contracts then The World&lt;/em&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/qn5qyZksrSc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;em&gt;Interface citizen scientists with government&lt;/em&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/OXGr4KlQ05E&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;em&gt;My impression of what the other teams do&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/LCA_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><summary type="html">23/01/2017</summary></entry><entry><title type="html">Development OnLine</title><link href="http://localhost:4000/DTF-Blog/Ben-DTF-OnLine/" rel="alternate" type="text/html" title="Development OnLine" /><published>2016-10-21T00:00:00+11:00</published><updated>2016-10-21T00:00:00+11:00</updated><id>http://localhost:4000/DTF-Blog/Ben-DTF-OnLine</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-DTF-OnLine/">&lt;p&gt;&lt;em&gt;21/10/2016&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Australian, Aborgional, Torres Strait Islander and Victorian flags flying out along the “second front” of Treasury&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_Flags_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;online-now&quot;&gt;Online Now!&lt;/h3&gt;

&lt;p&gt;The paper prototypes have grown up and left the nest leaving us in charge of a couple of delinquent source code repositories and a belligerent Heroku instance. Our &lt;a href=&quot;https://github.com/CodeforAustralia/dtf-genesis&quot;&gt;source code repository&lt;/a&gt; has been up for a while now but new to the scene is our &lt;a href=&quot;http://dtf-genesis.herokuapp.com/&quot;&gt;live deployment to Heroku&lt;/a&gt;. We can’t say there haven’t been speed bumps along the way, but we are glad to have had any issues early in the project when we have a bit of time up our sleeves (and rebuilding the database is quicker at this point of the process)&lt;/p&gt;

&lt;h3 id=&quot;analytics-integrations-and-more&quot;&gt;Analytics Integrations and More&lt;/h3&gt;

&lt;p&gt;We have reconfigured the Analytics on the Genesis site to go through a service called Segment.io. The Segment.io service acts as a kind or duplicator and remailer for web analytics and switching to segment allows us to continue utilizing Google Analytics and at the same time experiment with a raft of other services such as Woopra, Tray.io and Treasure along with dozens of other data analysis and warehousing services&lt;/p&gt;

&lt;h3 id=&quot;citylab-presentation&quot;&gt;CityLab Presentation&lt;/h3&gt;

&lt;p&gt;Melbourne City recently hosted us at the new CityLab venue on Bourke st for our second Open House event with Code for Australia and the other fellowship teams. Great to hear about the genesis of CityLab and the ongoing projects currently running in the space, but don’t take our word for it, here is the video of the introduction by Lorraine Tighe and Michelle Fitzgerald from CityLab with the mc on the day Alvaro kicking things off&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/nTsvFNGdQyY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Now here is our teams presentation on the code we’ve developed, how human focused design allows us to focus on the real issues and how web scraping may just save us all yet. Considered too hot for TreasuryNet so download now!&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/0useXG_KkSY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;showcasing-our-mvp-at-dtf&quot;&gt;Showcasing our MVP at DTF&lt;/h3&gt;

&lt;p&gt;Now that we have a working minimum viable product we’ve been starting to show it off around the DTF and have even garnered some interest from people outside our own group. It’s been very rewarding getting feedback on the value of our outputs already. Another encouraging sign was that some people are already interested in using it and having it available as a resource for their day to day (or not so run of the mill) work. We were even able to capture this snap of a user “in the wild” trying out our tool and telling us what they want next&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/MVP_demo.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><summary type="html">21/10/2016</summary></entry><entry><title type="html">User surveys and more and more prototypes</title><link href="http://localhost:4000/DTF-Blog/Ben-DTF-User-Survey/" rel="alternate" type="text/html" title="User surveys and more and more prototypes" /><published>2016-09-09T00:00:00+10:00</published><updated>2016-09-09T00:00:00+10:00</updated><id>http://localhost:4000/DTF-Blog/Ben-DTF-User-Survey</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-DTF-User-Survey/">&lt;!-- https://codeforaustralia.github.io/DTF-Blog/ --&gt;
&lt;p&gt;&lt;em&gt;20/09/2016&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wonderful time of the year to have a front garden like this&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_Garden_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--
![](/DTF-Blog/images/DTF_Flags_1.jpg)
--&gt;

&lt;h3 id=&quot;learning-to-let-go&quot;&gt;Learning to let go&lt;/h3&gt;

&lt;p&gt;The paper prototypes are dead, long live the paper prototypes. It’s sad but true, no sooner had we immortalized the prototypes by publishing them on the blog than we had to pack them up and file them away in the drawer marked “Excelent idea team, but now is not the time” :\ … however all is not lost, we’ve gained valuable insight into the DTFs desires and motivations by making them explain in clear language why some solutions are acceptable and others not&lt;/p&gt;

&lt;p&gt;We were planning to mention that “We’ll be using rapid prototyping in our future work” about now but as you’ll see below, we already have. It has been a valuable method of digging down to the underlying emotions, requirements and desires of the client. It allows them to better visualize the underlying ideas behind a concept and makes it real and solid helping them to express why an idea might be genious/folly, what the like about it and even bring up related concepts they have had experiences with&lt;/p&gt;

&lt;h3 id=&quot;picking-up-new-tools&quot;&gt;Picking up new tools&lt;/h3&gt;

&lt;p&gt;We have setup Google Analytics on the teams web properties and while the results are not overly impressive at the moment we imagine that this will help us to focus our attention on the areas where it is most likely to have an impact&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_Analytics_01.png&quot; alt=&quot;&quot; width=&quot;45%&quot; /&gt; &lt;img src=&quot;/DTF-Blog/images/DTF_Analytics_02.png&quot; alt=&quot;&quot; width=&quot;45%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_Analytics_03.png&quot; alt=&quot;&quot; width=&quot;45%&quot; /&gt; &lt;img src=&quot;/DTF-Blog/images/DTF_Analytics_04.png&quot; alt=&quot;&quot; width=&quot;45%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We’ve also begun using a Trello board to help coordinate team activities and utilizing mind mapping software so that our brainstorming sessions can have a lasting impact&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_MindMap_01.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;back-to-the-prototypes-now-with-surveys&quot;&gt;Back to the Prototypes… now with surveys&lt;/h3&gt;

&lt;p&gt;Now with a new focus and a much broader user base we’ve been back at the whiteboard thrashing out ideas and concepts to be prototyped. We focused in on the valuable-achievable quadrant in a value-risk breakdown and came up with nine core features we could deliver within the time frame we have that could provide immediate value to DTF and the public at large&lt;/p&gt;

&lt;p&gt;Rather than bore you by detailing each one and then send you off to do our survey we’ve embedded it right here so if you have a spare 15~20 minutes we’d be ever so gratefull if you’d fill it out and help guide the features you do/don’t want to see and have a &lt;b&gt;direct effect&lt;/b&gt; on this &lt;b&gt;democracy&lt;/b&gt; of ours&lt;/p&gt;

&lt;iframe src=&quot;https://docs.google.com/forms/d/e/1FAIpQLSf8YHYE3LzU4R7QOCRocP2MMeLOZpYG6dSIBxcfi1uhgYPZ4Q/viewform?embedded=true&quot; width=&quot;760&quot; height=&quot;500&quot; frameborder=&quot;0&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot;&gt;Loading...&lt;/iframe&gt;

&lt;hr /&gt;

&lt;p&gt;There is also a link to the survey ready to be tweeted to the world:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Help provide feedback to the Vic Gov and @CodeforAus about public contracting data https://goo.gl/forms/m2IHygbsbgZHwyRd2&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;thats-another-wrap&quot;&gt;Thats another wrap&lt;/h2&gt;

&lt;p&gt;In the mean time feel free to send any &lt;b&gt;C&lt;/b&gt;omments, &lt;b&gt;C&lt;/b&gt;orrections, &lt;b&gt;C&lt;/b&gt;oncerns, &lt;b&gt;C&lt;/b&gt;omplaints or anything else beginning with the letter &lt;strong&gt;“C”&lt;/strong&gt; to &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#050;&amp;#048;&amp;#049;&amp;#054;&amp;#045;&amp;#100;&amp;#116;&amp;#102;&amp;#045;&amp;#102;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#119;&amp;#115;&amp;#104;&amp;#105;&amp;#112;&amp;#064;&amp;#099;&amp;#111;&amp;#100;&amp;#101;&amp;#102;&amp;#111;&amp;#114;&amp;#097;&amp;#117;&amp;#115;&amp;#116;&amp;#114;&amp;#097;&amp;#108;&amp;#105;&amp;#097;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&quot;&gt;DTF Project Feedback&lt;/a&gt;… that is if you don’t feel like leaving a comment below&lt;/p&gt;

&lt;p&gt;We finish off this blog with a photo of one of the the meetings we’ve been told that we’re not allowed to attend (… and yet they keep having it withing earshot of our cubicles #YourMoneyHardAtWork)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_SecretMeeting_01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><summary type="html">20/09/2016</summary></entry><entry><title type="html">Prototyping at DTF</title><link href="http://localhost:4000/DTF-Blog/Ben-DTF-Prototypes/" rel="alternate" type="text/html" title="Prototyping at DTF" /><published>2016-09-05T00:00:00+10:00</published><updated>2016-09-05T00:00:00+10:00</updated><id>http://localhost:4000/DTF-Blog/Ben-DTF-Prototypes</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-DTF-Prototypes/">&lt;!-- https://codeforaustralia.github.io/DTF-Blog/ --&gt;
&lt;p&gt;&lt;em&gt;05/09/2016&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Australian, Aborigional, Torres Straits and Victorian flags fly over the DTFs front door&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF_Flags_2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--
![](/DTF-Blog/images/DTF_Flags_1.jpg)
![](/DTF-Blog/images/DTF_Garden_1.jpg)
--&gt;

&lt;h2 id=&quot;prototypes-prototypes-and-more-prototypes&quot;&gt;Prototypes, prototypes and more prototypes&lt;/h2&gt;

&lt;p&gt;Last week at the Department we’ve been brainstorming some concepts about how to improve the quality and frequency of reporting by other government departments&lt;/p&gt;

&lt;p&gt;While we are still yet to gain access to any actual users of our systems we have begun creating &lt;strong&gt;paper prototypes&lt;/strong&gt; of potential solutions and showing them to users with a similar perspective and members of the general public&lt;/p&gt;

&lt;p&gt;Below we will detail all of the designs, both epic-survivor and fail-whale to discuss some of there pros and cons. The opinions and ideas expressed below are a mix of all the above mentioned stakeholders liberally mixed with my own biases and forgetfulness.&lt;/p&gt;

&lt;p&gt;You can click on the icons below to see the full sized images and leave a comment below if any catch your fancy (or make you ill)&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto01---autofilljpg-height120px-width120pxdtf-blogimagesprotosdtfproto01---autofilljpg-01---autofill-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_01 - autofill.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_01 - autofill.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #01 - Autofill prototype&lt;/h3&gt;

&lt;p&gt;The simple idea of using DTF and other public data to auto populate fields in the form&lt;/p&gt;

&lt;p&gt;This prototype provoked the best stakeholder comment of the day… “Isn’t this what you’re doing?”&lt;/p&gt;

&lt;p&gt;While this is a fairly common form technique and one we are assuming we will use, we still wanted to put it in front of our users and get feedback on exceptions to the rule or any little caveats they may think might apply to this form&lt;/p&gt;

&lt;p&gt;In particular we were warned to &lt;strong&gt;be careful&lt;/strong&gt; with geographic boundaries of &lt;strong&gt;municipalities&lt;/strong&gt; and &lt;strong&gt;post-codes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are also cases where we want to &lt;strong&gt;encourage thinking&lt;/strong&gt; and &lt;strong&gt;observing&lt;/strong&gt; over just getting it done quick. In some of these cases we may want to consider not autofilling some fields even if we can&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto02---last-responsejpg-height120px-width120pxdtf-blogimagesprotosdtfproto02---last-responsejpg-02---lastfill-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_02 - last response.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_02 - last response.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #02 - Lastfill prototype&lt;/h3&gt;

&lt;p&gt;This concept fills in the form with the last used answers in a distinct color, fields can be updated or left with the defaults&lt;/p&gt;

&lt;p&gt;Although the prototype was rejected as it might encourage less thinking about responses, there were some insights gleaned in any case&lt;/p&gt;

&lt;p&gt;Firstly was a feature we’d not considered, an &lt;strong&gt;audit trail&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Additionally there may be some cases where &lt;strong&gt;highlighting&lt;/strong&gt; (or &lt;strong&gt;red flagging&lt;/strong&gt;) variations or changes to the status of a project&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto03---saved-fieldsjpg-height120px-width120pxdtf-blogimagesprotosdtfproto03---saved-fieldsjpg-03---saved-fields-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_03 - saved fields.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_03 - saved fields.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #03 - Saved fields prototype&lt;/h3&gt;

&lt;p&gt;This concept is to save the most commonly used options in a drop down or combo list&lt;/p&gt;

&lt;p&gt;Might be handy for some fields, but is also likely to promote no-thinking submissions, probably a &lt;strong&gt;no no&lt;/strong&gt; in most situations&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto04---feedbackjpg-height120px-width120pxdtf-blogimagesprotosdtfproto04---feedbackjpg-04---fast-feedback-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_04 - feedback.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_04 - feedback.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #04 - Fast feedback prototype&lt;/h3&gt;

&lt;p&gt;This concept alerts users to issues in the form and prompts the DTF for prompt action&lt;/p&gt;

&lt;p&gt;The confirmation of completion model was very well received although the DTF will not be contacting any departments without an explicit request&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Red flagging&lt;/strong&gt; incomplete fields would also be a good feature&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validation of form data&lt;/strong&gt; like the current excel trials could also be a good feature&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto05---savingjpg-height120px-width120pxdtf-blogimagesprotosdtfproto05---savingjpg-05---saved-progress-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_05 - saving.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_05 - saving.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #05 - Saved progress prototype&lt;/h3&gt;

&lt;p&gt;The idea of saving (maybe with login or maybe on local storage) a form in a half completed state&lt;/p&gt;

&lt;p&gt;Saving progress is a &lt;strong&gt;must have&lt;/strong&gt; as the form may take some time to complete&lt;/p&gt;

&lt;p&gt;Simple &lt;strong&gt;background saving&lt;/strong&gt; would be the best mode and the ability to &lt;strong&gt;export to pdf&lt;/strong&gt; would also be appreciated&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto06---multidimentionaljpg-height120px-width120pxdtf-blogimagesprotosdtfproto06---multidimentionaljpg-06---multidementional-input-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_06 - multidimentional.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_06 - multidimentional.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #06 - Multidementional input prototype&lt;/h3&gt;

&lt;p&gt;Allow for a more fluid or human feel by replacing radio buttons with two dimentional graphs&lt;/p&gt;

&lt;p&gt;Multidimensional inputs were thoroughly derided (thankfully) as were &lt;strong&gt;any&lt;/strong&gt; other &lt;strong&gt;attempts to fuzzify scoring&lt;/strong&gt; away from integers&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto07---examplesjpg-height120px-width120pxdtf-blogimagesprotosdtfproto07---examplesjpg-07---examples-included-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_07 - examples.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_07 - examples.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #07 - Examples included prototype&lt;/h3&gt;

&lt;p&gt;This concept includes examples of what would constitute a score of a certain value in each field&lt;/p&gt;

&lt;p&gt;The idea of including examples for users to refer to was also &lt;strong&gt;discouraged&lt;/strong&gt; as the DTF do not want to be seen to be dictating how departments score contractors&lt;/p&gt;

&lt;p&gt;This kind of implies that getting standardized scoring could be &lt;strong&gt;problematic&lt;/strong&gt; or at least &lt;strong&gt;difficult&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto08---workflowjpg-height120px-width120pxdtf-blogimagesprotosdtfproto08---workflowjpg-08---workflow-management-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_08 - workflow.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_08 - workflow.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #08 - Workflow management prototype&lt;/h3&gt;

&lt;p&gt;This form has a backend to monitor the progress and dates of a contract and allert key people at the right moment or automate preprepared automated tasks&lt;/p&gt;

&lt;p&gt;Feedback suggests this would be useful in conjunction with &lt;strong&gt;reminders to kick start the process&lt;/strong&gt; after a waiting period&lt;/p&gt;

&lt;p&gt;Looks good and is &lt;strong&gt;worth showing&lt;/strong&gt; to the departments for further feedback&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto09---importjpg-height120px-width120pxdtf-blogimagesprotosdtfproto09---importjpg-09---importing-data-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_09 - import.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_09 - import.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #09 - Importing data prototype&lt;/h3&gt;

&lt;p&gt;This concept coould import much of the required data from a departments own CMS/otherMS/database/spreadsheets&lt;/p&gt;

&lt;p&gt;We were warned that departments might &lt;strong&gt;not&lt;/strong&gt; have systems &lt;strong&gt;sophisticated enough&lt;/strong&gt; to export reports from, or those reports might contain insufficient data&lt;/p&gt;

&lt;p&gt;Any &lt;strong&gt;changes discovered&lt;/strong&gt; in static data should be &lt;strong&gt;flagged&lt;/strong&gt; and investigated&lt;/p&gt;

&lt;p&gt;It is also &lt;strong&gt;unlikely&lt;/strong&gt; that the departments would be &lt;strong&gt;wiling to share&lt;/strong&gt; internal reports&lt;/p&gt;

&lt;p&gt;Additionally the issue of &lt;strong&gt;who is going to pay&lt;/strong&gt; for all this came up during this prototype (although the question holds for any solution and is a factor we have so far only considered in passing)&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto10---segmentedjpg-height120px-width120pxdtf-blogimagesprotosdtfproto10---segmentedjpg-10---segmented-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_10 - segmented.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_10 - segmented.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #10 - Segmented prototype&lt;/h3&gt;

&lt;p&gt;This is a build your own &lt;strike&gt;adventure&lt;/strike&gt; reporting form meta-form&lt;/p&gt;

&lt;p&gt;Some employees will &lt;strong&gt;not like the idea&lt;/strong&gt; of building their own forms&lt;/p&gt;

&lt;p&gt;Besides, all fields are &lt;strong&gt;mandatory&lt;/strong&gt; … maybe this is why no one gives much feedback now?&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto11---educationjpg-height120px-width120pxdtf-blogimagesprotosdtfproto11---educationjpg-11---educational-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_11 - education.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_11 - education.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #11 - Educational prototype&lt;/h3&gt;

&lt;p&gt;This prototype would include guidelines and educational material on how to assess the quality and performance of a construction project&lt;/p&gt;

&lt;p&gt;An &lt;strong&gt;expand/collapse all&lt;/strong&gt; toggle would be essential, along with &lt;strong&gt;back to top&lt;/strong&gt; markers&lt;/p&gt;

&lt;p&gt;Otherwise this one is a &lt;strong&gt;good idea&lt;/strong&gt; as long as it’s not done with hover tips&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto12---freeformjpg-height120px-width120pxdtf-blogimagesprotosdtfproto12---freeformjpg-12---freeform-reporting-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_12 - freeform.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_12 - freeform.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #12 - Freeform reporting prototype&lt;/h3&gt;

&lt;p&gt;This was a fun concept that came out of a group brainstorming session, just a field for the contract number and a whole world of opportunities&lt;/p&gt;

&lt;p&gt;Hell no! was approximately the feedback this prototype received… but if time allowed this just might grant significant insight into the issues, and wouldn’t you just love to see what came back&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto13---spreadsheetjpg-height120px-width120pxdtf-blogimagesprotosdtfproto13---spreadsheetjpg-13---spreadsheet-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_13 - spreadsheet.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_13 - spreadsheet.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #13 - Spreadsheet prototype&lt;/h3&gt;

&lt;p&gt;This concept was to make people comfortable with spreadsheets feel right at home, the extra cells could be used for intermediate calculations with the locations of the final values the only predefined locations, this way the departments could build their own forms in a compatible way&lt;/p&gt;

&lt;p&gt;Not very well received, but might still be an interesting final touch&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto14---journeyjpg-height120px-width120pxdtf-blogimagesprotosdtfproto14---journeyjpg-14---journey-mapping-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_14 - journey.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_14 - journey.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #14 - Journey mapping prototype&lt;/h3&gt;

&lt;p&gt;This prototype allows a user to order the form as they wish and then provides visual indicators of progress and breadcrumbs for backtracking or skipping ahead&lt;/p&gt;

&lt;p&gt;This design was very &lt;strong&gt;well received&lt;/strong&gt; by our test audience&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Autosaving&lt;/strong&gt; is a must&lt;/p&gt;

&lt;p&gt;Sections must not be able to be skipped&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto15---delegationjpg-height120px-width120pxdtf-blogimagesprotosdtfproto15---delegationjpg-15---delegation-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_15 - delegation.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_15 - delegation.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #15 - Delegation prototype&lt;/h3&gt;

&lt;p&gt;This met-form concept makes it easy to delegate sub-components to any person or group, allowing for a collabrotive final report&lt;/p&gt;

&lt;p&gt;Usually this is performed by one person, but this would be &lt;strong&gt;great for two or more&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Education department in particular &lt;strong&gt;might be interested&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confidentiality concerns&lt;/strong&gt; for segments that might be sent out to external entities&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto16---remindersjpg-height120px-width120pxdtf-blogimagesprotosdtfproto16---remindersjpg-16---reminders-and-alerts-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_16 - reminders.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_16 - reminders.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #16 - Reminders and alerts prototype&lt;/h3&gt;

&lt;p&gt;This concept is just for a system to monitor public contracting information and prompt departments that reporting on a contract is (over?) due&lt;/p&gt;

&lt;p&gt;Reminders would be &lt;strong&gt;very worthwhile&lt;/strong&gt;, and &lt;strong&gt;detailing the reason&lt;/strong&gt; for the update/review would also be great&lt;/p&gt;

&lt;p&gt;Worth discussing with Housing and other &lt;strong&gt;departments&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some people would have &lt;strong&gt;too many reports&lt;/strong&gt; and a &lt;strong&gt;summary&lt;/strong&gt; or &lt;strong&gt;digest&lt;/strong&gt; might be more appropriate&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Include links&lt;/strong&gt; to forms and resources&lt;/p&gt;

&lt;p&gt;More &lt;strong&gt;time for departments to plan&lt;/strong&gt; for reporting rather than reacting after the fact would be a great thing&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto17---indirectjpg-height120px-width120pxdtf-blogimagesprotosdtfproto17---indirectjpg-17---indirect-scoring-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_17 - indirect.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_17 - indirect.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #17 - Indirect scoring prototype&lt;/h3&gt;

&lt;p&gt;This concept was to use multiple reviewers and utilise the wisdom of the crouds to use something like the mean values on the final report&lt;/p&gt;

&lt;p&gt;Not well received as it involves &lt;strong&gt;duplication of effort&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;However &lt;strong&gt;time based aggregation&lt;/strong&gt; might be useful for displaying &lt;strong&gt;sensitive information&lt;/strong&gt; to the public&lt;/p&gt;

&lt;p&gt;Another idea might be to &lt;strong&gt;aggregate different classes&lt;/strong&gt; of reporting (such as department/contractor/public)&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto18---analyticsjpg-height120px-width120pxdtf-blogimagesprotosdtfproto18---analyticsjpg-18---analytics-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_18 - analytics.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_18 - analytics.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #18 - Analytics prototype&lt;/h3&gt;

&lt;p&gt;This concept was just to display a publicly visible dashboard of Victorian procurement reporting, allowing the public visibility so that they can exert pressure on departments to improve reporting to DTF&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reporting to departments&lt;/strong&gt; on their reporting (gamification of the reporting process). Dep v Dep &lt;strong&gt;leaderboards&lt;/strong&gt;. Allow contractors to &lt;strong&gt;report on departments&lt;/strong&gt; too (allows them to exert pressure on departments to report better)&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto19---flavoursjpg-height120px-width120pxdtf-blogimagesprotosdtfproto19---flavoursjpg-19---input-flavours-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_19 - flavours.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_19 - flavours.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #19 - Input flavours prototype&lt;/h3&gt;

&lt;p&gt;This idea allows users to flip between different styles of input for ratings for example from radio boxes, sliders, numeric text or some other method&lt;/p&gt;

&lt;p&gt;Fuzzy inputs might not help anything. Might lead to &lt;strong&gt;inconsistent&lt;/strong&gt; scoring&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto20---gamificationjpg-height120px-width120pxdtf-blogimagesprotosdtfproto20---gamificationjpg-20---gamification-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_20 - gamification.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_20 - gamification.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #20 - Gamification prototype&lt;/h3&gt;

&lt;p&gt;This concept was to increase engagement by rewarding participation with points and harnessing the competitive nature of people by creating some kind of leaderboard of reported data&lt;/p&gt;

&lt;p&gt;Positive feedback on &lt;strong&gt;both&lt;/strong&gt; aspects&lt;/p&gt;

&lt;p&gt;Feedback also indicated a &lt;strong&gt;work-to-go&lt;/strong&gt; meter might be more pleasant than a work-done meter&lt;/p&gt;

&lt;h3 id=&quot;dtf-blogimagesprotosdtfproto21---independancejpg-height120px-width120pxdtf-blogimagesprotosdtfproto21---independancejpg-21---data-independence-prototype&quot;&gt;&lt;a href=&quot;/DTF-Blog/images/protos/DTF_Proto_21 - independance.jpg&quot;&gt;&lt;img src=&quot;/DTF-Blog/images/protos/DTF_Proto_21 - independance.jpg&quot; alt=&quot;&quot; height=&quot;120px&quot; width=&quot;120px&quot; /&gt;&lt;/a&gt; #21 - Data independence prototype&lt;/h3&gt;

&lt;p&gt;This concept allows departments to host there own solutions under the condition they provide an API to allow DTF to access the data it requires to evaluate performance on a contract&lt;/p&gt;

&lt;p&gt;This could take the form of a simple API specification or an “out of the box” prerolled solution (something like a python server, postgresBD &amp;amp; custom DTF UI on a thumb-drive ready to rock a web-API)&lt;/p&gt;

&lt;p&gt;Review specific data will still need to be &lt;strong&gt;kept somewhere&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Usually data is &lt;strong&gt;locked up&lt;/strong&gt; in a CMS system&lt;/p&gt;

&lt;p&gt;We could use a &lt;strong&gt;shadow database&lt;/strong&gt; into which we dump the public aspects, then we can expose that without risk&lt;/p&gt;

&lt;p&gt;Auditability and &lt;strong&gt;traceability of data&lt;/strong&gt; then becomes an issue&lt;/p&gt;

&lt;p&gt;Requires &lt;strong&gt;work&lt;/strong&gt; to make data available, but would be very &lt;strong&gt;valuable&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;well-thats-all-for-now-kiddo&quot;&gt;Well, thats all for now kiddo&lt;/h2&gt;

&lt;p&gt;Well that the roundup of our current prototypes, hopefully we’ll have a few digitized versions for you to click on soon enough&lt;/p&gt;

&lt;p&gt;In the mean time feel free to send any &lt;b&gt;C&lt;/b&gt;omments, &lt;b&gt;C&lt;/b&gt;orrections, &lt;b&gt;C&lt;/b&gt;oncerns, &lt;b&gt;C&lt;/b&gt;omplaints or anything else beginning with the letter &lt;strong&gt;“C”&lt;/strong&gt; to &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#050;&amp;#048;&amp;#049;&amp;#054;&amp;#045;&amp;#100;&amp;#116;&amp;#102;&amp;#045;&amp;#102;&amp;#101;&amp;#108;&amp;#108;&amp;#111;&amp;#119;&amp;#115;&amp;#104;&amp;#105;&amp;#112;&amp;#064;&amp;#099;&amp;#111;&amp;#100;&amp;#101;&amp;#102;&amp;#111;&amp;#114;&amp;#097;&amp;#117;&amp;#115;&amp;#116;&amp;#114;&amp;#097;&amp;#108;&amp;#105;&amp;#097;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&quot;&gt;DTF Project Feedback&lt;/a&gt;… that is if you don’t feel like leaving a comment in our spiffy new comments section below telling us which ones you love and/or hate :D&lt;/p&gt;</content><summary type="html">05/09/2016</summary></entry><entry><title type="html">Our fellowship begins with DTF</title><link href="http://localhost:4000/DTF-Blog/Ben-DTF-Start/" rel="alternate" type="text/html" title="Our fellowship begins with DTF" /><published>2016-08-26T00:00:00+10:00</published><updated>2016-08-26T00:00:00+10:00</updated><id>http://localhost:4000/DTF-Blog/Ben-DTF-Start</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-DTF-Start/">&lt;!-- https://codeforaustralia.github.io/DTF-Blog/ --&gt;
&lt;p&gt;&lt;em&gt;26/08/2016&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/DTF-Blog/images/DTF-Disc.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--
![](/DTF-Blog/images/DTF_Flags_1.jpg)
![](/DTF-Blog/images/DTF_Flags_2.jpg)
![](/DTF-Blog/images/DTF_Garden_1.jpg)
--&gt;

&lt;h3 id=&quot;security-security-and-more-security&quot;&gt;Security, security and more security&lt;/h3&gt;

&lt;p&gt;It is actually a bit heartening that security at the Department of Treasury and Finance is so tight, but as someone who just wants to get rapid traction on a short project it was rather frustrating how much of a blocker this was for our first week. In particular the lack of printing facilities was driving us crazy but things are improving and we even have limited access to the database they want us to work on. Only time will tell how difficult accessing other datastores and sources of contracting info is going to be&lt;/p&gt;

&lt;p&gt;I’m also in uncharted territory as the instructions provided so far have only given instructions for Mac or Windows… no mention of Linux! So far so good and it does seem like it’s going to be possible, but it will introduce an unwanted level of uncertainty to the situation&lt;/p&gt;

&lt;p&gt;&lt;em&gt;At least they’ve let us in and granted us access:&lt;/em&gt;
&lt;img src=&quot;/DTF-Blog/images/DTF_office_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;purchasing-procurement-and-paying-for-stuff&quot;&gt;Purchasing, procurement and paying for stuff&lt;/h3&gt;

&lt;p&gt;All three of our team has ramped up our understanding of the procurement process and related processes used at the DTF. It has been a great boon that all three of us come at the problem form different angles and have been able to assist each others learning and help clarify the groups understanding of the domain and the scope of the project&lt;/p&gt;

&lt;h3 id=&quot;agile-the-slow-way&quot;&gt;Agile the slow way&lt;/h3&gt;

&lt;p&gt;Due to the structure of the workplace at the DTF and the stage of the project we are in it has been challenging to function as an Agile team and self direct our days agenda. The workplace has a low volume tolerance and so things like standups have to be taken into a meeting room, with the result that they can turn into drawn out meetings.&lt;/p&gt;

&lt;p&gt;At the moment there are also key knowledge and influence holders we are having to meet with who we will have limited access to as the project progresses (yay) and this has also made any daily routines and rituals rather unstable. However we are starting to settle into a couple of rituals at regular times and I can see things getting better as we beginning being able to reach-out to people independently and set our own timetables&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Level 1: Chaos:&lt;/em&gt;
&lt;img src=&quot;/DTF-Blog/images/DTF_Ideas_1.jpg&quot; alt=&quot;&quot; title=&quot;Level 1: Chaos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Level 2: Disorganized:&lt;/em&gt;
&lt;img src=&quot;/DTF-Blog/images/DTF_Ideas_2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Level 3: Inspirational ideas for motivating better feedback:&lt;/em&gt;
&lt;img src=&quot;/DTF-Blog/images/DTF_Ideas_3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;prototypes-and-place-holders&quot;&gt;Prototypes and place-holders&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Naively prototyping the current form as is:&lt;/em&gt;
&lt;img src=&quot;/DTF-Blog/images/DTF_BigForm.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This week in addition to continuing our research into reporting practices and requirements we have begun prototyping some possible forms for our solution. Below are a selection of our ideas and prototypes we have been considering&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Paper prototypes of possible form ideas:&lt;/em&gt;
&lt;img src=&quot;/DTF-Blog/images/DTF_Protos_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><summary type="html">26/08/2016</summary></entry><entry><title type="html">Our fellowship begins with CfA</title><link href="http://localhost:4000/DTF-Blog/Ben-First-week/" rel="alternate" type="text/html" title="Our fellowship begins with CfA" /><published>2016-08-08T00:00:00+10:00</published><updated>2016-08-08T00:00:00+10:00</updated><id>http://localhost:4000/DTF-Blog/Ben-First-week</id><content type="html" xml:base="http://localhost:4000/DTF-Blog/Ben-First-week/">&lt;!-- https://codeforaustralia.github.io/DTF-Blog/ --&gt;
&lt;p&gt;&lt;em&gt;08/08/2016&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://codeforaustralia.github.io/DTF-Blog/images/CFA_day_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;day-1&quot;&gt;Day 1&lt;/h3&gt;

&lt;p&gt;Quote of the day: &lt;strong&gt;“Build from the trenches… simplify from the overview”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During the first day we all got to know each other by doing a modified &lt;a href=&quot;https://en.wikipedia.org/wiki/PechaKucha&quot;&gt;Pecha Kucha&lt;/a&gt; presentations. My biggest take-away from that was just how short 20 seconds is… but it was also great to get a glimpse into everyones little spark, what is it they just had to cram into 20 seconds&lt;/p&gt;

&lt;p&gt;We also did an interesting gamification workshop with Steffen Walz using his &lt;a href=&quot;https://twitter.com/playfuturedeck&quot;&gt;Future Deck&lt;/a&gt; strategy cards which reminded me of Enos &lt;a href=&quot;https://en.wikipedia.org/wiki/Oblique_Strategies&quot;&gt;Oblique strategy&lt;/a&gt; cards&lt;/p&gt;

&lt;p&gt;Finally we discussed the importance of team agreements and the value of checkins and honest communication. We also discussed how shared understanding can help drive shared outcomes and conversely competing visions can often lead to divergent plans&lt;/p&gt;

&lt;h3 id=&quot;day-2&quot;&gt;Day 2&lt;/h3&gt;

&lt;p&gt;Quote of the day: &lt;strong&gt;“Manually intensive internal process”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Today we discussed the importance in our role of demonstrating agile methods and design focused development for the government. We also covered how joint creativity and visioning exercises can help to highlight issues in current stakeholder discussions.&lt;/p&gt;

&lt;p&gt;We also had short presentations from the government officials involved in the three challenges. Since then I have found out that we are going to the Department of Treasury and so it seems that my mind has expunged the DWELP/Parks and Legal Aid challenges entirely.&lt;/p&gt;

&lt;p&gt;The DTF challenge outlined a cumbersome system build for requirements long past… there were stories of databases migrating, the emailing of spreadsheets extracted from databases and the wailing and gnashing of… ok, maybe not the last one.&lt;/p&gt;

&lt;p&gt;Ideally our solution would work alongside the Construction Supplier Register to promote better feedback from industry, increase transparency into the purchasing choices of the government and ideally assist in forecasting decisions for government procurement&lt;/p&gt;

&lt;p&gt;We also did a few visioning exercises as a group and as individual. I found it incredibly heartening to find that the most common thread between everyone in the group is that we all individually wanted to produce long term sustainable solutions that will persist beyond our fellowship. Unfortunately as a group our vision was a chaotic circus&lt;/p&gt;

&lt;h3 id=&quot;day-3&quot;&gt;Day 3&lt;/h3&gt;

&lt;p&gt;Quote of the day: &lt;strong&gt;“Nothing quotable is ever said on day three”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We talked with a mentor about the importance of following through in customer relations. Whilst it might not seem to be an overly insightful observation it is something that we, as technically minded people, can lose sight of. We must do our best to follow through on all our contacts requests and address them in a timely manner. We also discussed again the importance of lucid and real negotiation in agile. If we are not genuine, then we will fail to come to a genuine agreement. Part of being genuine is honestly being yourself, but the flipside is honestly listening&lt;/p&gt;

&lt;p&gt;Day 3 also saw our first challenge. The easy one. This challenge turned into a great example of our strength at rapid development of design and simplification of problems. All groups created a visible or even demonstrable prototype. While these prototypes had some rough edges that the department representatives could see, they all still represented real paths forward that could be tweaked and utilised to simplify the process by the end of the week or two (pending paperwork)&lt;/p&gt;

&lt;h3 id=&quot;day-4&quot;&gt;Day 4&lt;/h3&gt;

&lt;p&gt;Quote of the day: &lt;strong&gt;“Why, why, why?”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We were spoilt with three guests on day 4 (including Guss from RHoK, who’m I’d thought I’d serendipitously bumped into downstairs) and we mostly talked about how defining the real problem is critical and often difficult. Playing the “why?, why?,why?” game can help but often we must go further than that and question the very problem we are looking at or broaden our stakeholder group&lt;/p&gt;

&lt;p&gt;We also discussed &lt;a href=&quot;http://launchvic.org/&quot;&gt;Launch Vic&lt;/a&gt; which invests in infrastructure for start-ups, things like promoting the building of co-working spaces, encouraging the expansion of capacity of existing places or investing in shared infrastructure&lt;/p&gt;

&lt;p&gt;We also had our second challenge in what we thought was a PTV form redesign. I read the problem, and I read it again. I looked up at my colleges and shrugged. They looked at me and shrugged… We all read it again. Finally someone broke the awkward silence: “what’s wrong with that?”… “nothing” we all replied. It was then that we made the fatal mistake… we assumed the role of the customer… when the customer was about 150 meters away at the nearest train station! Had we consulted with our stakeholders they would have told us that all the problems we saw with the system were non-existent… although what do we do at that stage: the right answer (which one team did) is: pivot.&lt;/p&gt;

&lt;p&gt;It took me about three days to think of the perfect way to pivot that problem that still keeps it relevant to the problem that the seniors ticket is suppose to solve. One of the benefits of the program is to make travel at non-peak times more attractive to seniors and so reduce the load on public transport during peak times. So I would investigate the feasibility of providing seniors a more comprehensive package that included reduced fares for travelling in non-peak times during weekdays in addition to the free weekend pass, further driving down peak demand.&lt;/p&gt;

&lt;h3 id=&quot;day-5-retro&quot;&gt;Day 5: Retro&lt;/h3&gt;

&lt;p&gt;Quote of the day: &lt;strong&gt;“As fast as things are now is as slow as they will ever be”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On our final day we had a very enlightening discussion about the importance of designing with not only our users in mind but also the next generation. If our systems are to last they must be usable today and tomorrow… and tomorrow, that tomorrow might not look much like tomorrow does today&lt;/p&gt;

&lt;p&gt;We also repeated the theme of finding the real problem, this time with an emphasis on visibility and making problems easy to find. Paint your problems red! There is also the possibility of using active agents to find problems, proactively creating autonomous entities that will seek out issues and conflicts.&lt;/p&gt;

&lt;p&gt;Our teams also self formed on Friday and obviously I was in the TDF team. It was very interesting to see the self formation process. I’d love to tell you more but it’s all secret agile retro business (which might be beer if you go on the slack messages)&lt;/p&gt;

&lt;p&gt;I’ll finish on a photo of lunch time discussions at TeamSquare level 4 with a few people from the DTF!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://codeforaustralia.github.io/DTF-Blog/images/DTF_lunch.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><summary type="html">08/08/2016</summary></entry></feed>
